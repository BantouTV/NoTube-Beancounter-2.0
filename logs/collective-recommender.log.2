0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@21fb3211
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
28   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
86   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
86   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2515 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2515 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2517 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2517 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2517 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2517 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2517 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2517 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2517 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2517 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2517 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2518 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2518 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2518 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2518 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2518 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2518 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:04:03 GMT[\r][\n]"
2518 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2518 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2518 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2518 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2518 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2518 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2518 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2519 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2519 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2520 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2520 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2521 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2522 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2522 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2522 [main] DEBUG httpclient.wire.content  - << "1"
2522 [main] DEBUG httpclient.wire.content  - << "f"
2522 [main] DEBUG httpclient.wire.content  - << "6"
2522 [main] DEBUG httpclient.wire.content  - << "9"
2522 [main] DEBUG httpclient.wire.content  - << "[\r]"
2522 [main] DEBUG httpclient.wire.content  - << "[\n]"
2523 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:04:02.772+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2524 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:04:03.240+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:04:03.241+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2524 [main] DEBUG httpclient.wire.content  - << "[\r]"
2524 [main] DEBUG httpclient.wire.content  - << "[\n]"
2524 [main] DEBUG httpclient.wire.content  - << "0"
2525 [main] DEBUG httpclient.wire.content  - << "[\r]"
2525 [main] DEBUG httpclient.wire.content  - << "[\n]"
2525 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2525 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2525 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2525 [main] DEBUG httpclient.wire.content  - << "[\r]"
2525 [main] DEBUG httpclient.wire.content  - << "[\n]"
2525 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2525 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2525 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2525 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2525 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2525 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2526 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2526 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:04:02.772+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:04:03.240+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:04:03.241+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2530 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2530 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2530 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2530 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2530 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2530 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2531 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2531 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2531 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2531 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2531 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2532 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2532 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2532 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2532 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2532 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2532 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2532 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2532 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2532 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2533 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2533 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2533 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2533 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2533 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2533 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2533 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2533 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2533 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2546 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2546 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2546 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2547 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2547 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2547 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2547 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2547 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2548 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:04:03 GMT[\r][\n]"
2548 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2548 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2548 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2548 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2548 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2548 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2548 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2548 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2548 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2548 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2548 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2548 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2548 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2548 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2549 [main] DEBUG httpclient.wire.content  - << "4"
2549 [main] DEBUG httpclient.wire.content  - << "3"
2549 [main] DEBUG httpclient.wire.content  - << "[\r]"
2549 [main] DEBUG httpclient.wire.content  - << "[\n]"
2549 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'ExistingUser' found","status":"OK"}"
2549 [main] DEBUG httpclient.wire.content  - << "[\r]"
2549 [main] DEBUG httpclient.wire.content  - << "[\n]"
2549 [main] DEBUG httpclient.wire.content  - << "0"
2549 [main] DEBUG httpclient.wire.content  - << "[\r]"
2549 [main] DEBUG httpclient.wire.content  - << "[\n]"
2549 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2549 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2549 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2549 [main] DEBUG httpclient.wire.content  - << "[\r]"
2549 [main] DEBUG httpclient.wire.content  - << "[\n]"
2550 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2550 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2550 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2550 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2550 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2550 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2550 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2550 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'ExistingUser' found","status":"OK"}
2556 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2556 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2557 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2557 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2557 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2557 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2558 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2558 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2558 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2558 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2558 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2558 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2558 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2558 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2558 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2558 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2559 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2559 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2559 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2559 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2559 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2559 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2559 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2559 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2559 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2559 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2559 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2559 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2559 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2559 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2560 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2560 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2560 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2560 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2560 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2560 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2560 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2560 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2560 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2560 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2560 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2568 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2568 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2568 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2568 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2568 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2568 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2568 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2569 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2569 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2569 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2569 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:04:03 GMT[\r][\n]"
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2569 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2570 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2570 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2570 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2570 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2570 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2570 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2570 [main] DEBUG httpclient.wire.content  - << "4"
2570 [main] DEBUG httpclient.wire.content  - << "b"
2571 [main] DEBUG httpclient.wire.content  - << "[\r]"
2571 [main] DEBUG httpclient.wire.content  - << "[\n]"
2571 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'NotExistingUser' not found","status":"NOK"}"
2571 [main] DEBUG httpclient.wire.content  - << "[\r]"
2571 [main] DEBUG httpclient.wire.content  - << "[\n]"
2571 [main] DEBUG httpclient.wire.content  - << "0"
2571 [main] DEBUG httpclient.wire.content  - << "[\r]"
2571 [main] DEBUG httpclient.wire.content  - << "[\n]"
2571 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2571 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2571 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2571 [main] DEBUG httpclient.wire.content  - << "[\r]"
2571 [main] DEBUG httpclient.wire.content  - << "[\n]"
2571 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2572 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2573 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2573 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2573 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2573 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2574 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2574 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'NotExistingUser' not found","status":"NOK"}
2585 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2585 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2585 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2585 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2585 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2585 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2585 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2585 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2585 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2585 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2586 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2586 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2586 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2589 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2589 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2589 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2589 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2589 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2589 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2589 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2590 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2590 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2590 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2590 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2591 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2591 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2591 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2591 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2591 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2591 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2595 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2595 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2595 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2595 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2595 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2595 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2595 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2596 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2596 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2596 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2596 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2597 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2597 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2597 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2597 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2597 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2597 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2597 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2598 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2598 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2598 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2598 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2598 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2598 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2626 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2626 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2626 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2626 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2626 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2626 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2626 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2626 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2626 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2627 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2627 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2627 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2627 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2627 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2627 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:04:03 GMT[\r][\n]"
2627 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2627 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2627 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2627 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2627 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2627 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2627 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2627 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2627 [main] DEBUG httpclient.wire.content  - << "6"
2627 [main] DEBUG httpclient.wire.content  - << "8"
2628 [main] DEBUG httpclient.wire.content  - << "[\r]"
2628 [main] DEBUG httpclient.wire.content  - << "[\n]"
2628 [main] DEBUG httpclient.wire.content  - << "{"object":"278f4235-9ccc-47f8-b378-c4ac6c953ba5","message":"user successfully registered","status":"OK"}"
2628 [main] DEBUG httpclient.wire.content  - << "[\r]"
2628 [main] DEBUG httpclient.wire.content  - << "[\n]"
2628 [main] DEBUG httpclient.wire.content  - << "0"
2628 [main] DEBUG httpclient.wire.content  - << "[\r]"
2628 [main] DEBUG httpclient.wire.content  - << "[\n]"
2628 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2628 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2628 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2628 [main] DEBUG httpclient.wire.content  - << "[\r]"
2628 [main] DEBUG httpclient.wire.content  - << "[\n]"
2628 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2628 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2628 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2628 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2629 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2629 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2629 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2629 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"278f4235-9ccc-47f8-b378-c4ac6c953ba5","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@349b688e
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
59   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
59   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
59   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
59   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
59   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
59   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
59   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
59   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
60   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
60   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
72   [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
89   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
89   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
92   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
92   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
92   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
93   [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
94   [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
95   [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
95   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
96   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
96   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
96   [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
97   [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
97   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
97   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
97   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
97   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
97   [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
98   [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
98   [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
98   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
98   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
103  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
103  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1891 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1891 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1894 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
1894 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1894 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1895 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1895 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1895 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1895 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1895 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:04:25 GMT[\r][\n]"
1896 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1896 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1896 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1896 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
1896 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
1896 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
1896 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
1896 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1896 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
1896 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
1896 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
1896 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
1898 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
1898 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
1898 [main] DEBUG httpclient.wire.content  - << "6"
1898 [main] DEBUG httpclient.wire.content  - << "8"
1898 [main] DEBUG httpclient.wire.content  - << "[\r]"
1898 [main] DEBUG httpclient.wire.content  - << "[\n]"
1898 [main] DEBUG httpclient.wire.content  - << "{"object":"614ee58f-4185-4e77-807a-aa7524cdec8d","message":"user successfully registered","status":"OK"}"
1898 [main] DEBUG httpclient.wire.content  - << "[\r]"
1898 [main] DEBUG httpclient.wire.content  - << "[\n]"
1898 [main] DEBUG httpclient.wire.content  - << "0"
1899 [main] DEBUG httpclient.wire.content  - << "[\r]"
1899 [main] DEBUG httpclient.wire.content  - << "[\n]"
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1899 [main] DEBUG httpclient.wire.content  - << "[\r]"
1899 [main] DEBUG httpclient.wire.content  - << "[\n]"
1899 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1899 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
1899 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
1899 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
1899 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
1899 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
1899 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
1900 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"614ee58f-4185-4e77-807a-aa7524cdec8d","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@3d762027
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
25   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
69   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
85   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
85   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
85   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2089 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2089 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:05:09 GMT[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2092 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2093 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2093 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2095 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2095 [main] DEBUG httpclient.wire.content  - << "1"
2095 [main] DEBUG httpclient.wire.content  - << "f"
2095 [main] DEBUG httpclient.wire.content  - << "6"
2095 [main] DEBUG httpclient.wire.content  - << "9"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2097 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:05:09.453+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2098 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:05:09.533+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:05:09.533+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2098 [main] DEBUG httpclient.wire.content  - << "[\r]"
2098 [main] DEBUG httpclient.wire.content  - << "[\n]"
2098 [main] DEBUG httpclient.wire.content  - << "0"
2098 [main] DEBUG httpclient.wire.content  - << "[\r]"
2098 [main] DEBUG httpclient.wire.content  - << "[\n]"
2098 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2098 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2098 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2098 [main] DEBUG httpclient.wire.content  - << "[\r]"
2098 [main] DEBUG httpclient.wire.content  - << "[\n]"
2098 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2099 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2099 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2099 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2099 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2099 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2099 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2099 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:05:09.453+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:05:09.533+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:05:09.533+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2104 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2104 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2104 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2105 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2106 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2106 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2106 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2107 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2107 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2107 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2107 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2107 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2116 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2116 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2116 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2117 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:05:09 GMT[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2118 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2118 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2118 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2118 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2118 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2118 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2118 [main] DEBUG httpclient.wire.content  - << "4"
2119 [main] DEBUG httpclient.wire.content  - << "3"
2119 [main] DEBUG httpclient.wire.content  - << "[\r]"
2119 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'ExistingUser' found","status":"OK"}"
2119 [main] DEBUG httpclient.wire.content  - << "[\r]"
2119 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG httpclient.wire.content  - << "0"
2119 [main] DEBUG httpclient.wire.content  - << "[\r]"
2119 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2119 [main] DEBUG httpclient.wire.content  - << "[\r]"
2119 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2120 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2120 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2120 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2120 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2120 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2120 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'ExistingUser' found","status":"OK"}
2125 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2125 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2126 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2126 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2126 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2126 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2127 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2127 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2128 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2128 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2128 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2128 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2129 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2129 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2129 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2130 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2134 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2135 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2135 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2135 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2135 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2135 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2136 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2136 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2136 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:05:09 GMT[\r][\n]"
2136 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2136 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2136 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2136 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2136 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2136 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2137 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2137 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2137 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2137 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2137 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2137 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2137 [main] DEBUG httpclient.wire.content  - << "4"
2137 [main] DEBUG httpclient.wire.content  - << "b"
2137 [main] DEBUG httpclient.wire.content  - << "[\r]"
2137 [main] DEBUG httpclient.wire.content  - << "[\n]"
2137 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'NotExistingUser' not found","status":"NOK"}"
2137 [main] DEBUG httpclient.wire.content  - << "[\r]"
2137 [main] DEBUG httpclient.wire.content  - << "[\n]"
2137 [main] DEBUG httpclient.wire.content  - << "0"
2138 [main] DEBUG httpclient.wire.content  - << "[\r]"
2138 [main] DEBUG httpclient.wire.content  - << "[\n]"
2138 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2138 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2138 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2138 [main] DEBUG httpclient.wire.content  - << "[\r]"
2138 [main] DEBUG httpclient.wire.content  - << "[\n]"
2138 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2138 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2138 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2138 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2138 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2138 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2139 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2139 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'NotExistingUser' not found","status":"NOK"}
2150 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2150 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2150 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2150 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2150 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2150 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2150 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2151 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2151 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2151 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2151 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2151 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2151 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2151 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2152 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2152 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2152 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2152 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2152 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2153 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2153 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2153 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2153 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2153 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2153 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2153 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2153 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2153 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2153 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2153 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2155 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2156 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2156 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2156 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2156 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2156 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2156 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2157 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2157 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2157 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2158 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2158 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2158 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2158 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2158 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2158 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2158 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2158 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2158 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2158 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2159 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2159 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2159 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2159 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2159 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2159 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2159 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2170 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2171 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2171 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2171 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2171 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2176 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2176 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2176 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2176 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:05:09 GMT[\r][\n]"
2176 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2176 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2176 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2177 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2177 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2177 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2177 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2177 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2178 [main] DEBUG httpclient.wire.content  - << "6"
2178 [main] DEBUG httpclient.wire.content  - << "8"
2178 [main] DEBUG httpclient.wire.content  - << "[\r]"
2178 [main] DEBUG httpclient.wire.content  - << "[\n]"
2178 [main] DEBUG httpclient.wire.content  - << "{"object":"66b53df3-9ace-4094-ab11-9e01c99aedd1","message":"user successfully registered","status":"OK"}"
2178 [main] DEBUG httpclient.wire.content  - << "[\r]"
2178 [main] DEBUG httpclient.wire.content  - << "[\n]"
2178 [main] DEBUG httpclient.wire.content  - << "0"
2178 [main] DEBUG httpclient.wire.content  - << "[\r]"
2178 [main] DEBUG httpclient.wire.content  - << "[\n]"
2178 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2178 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2178 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2179 [main] DEBUG httpclient.wire.content  - << "[\r]"
2179 [main] DEBUG httpclient.wire.content  - << "[\n]"
2179 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2179 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2179 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2179 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2179 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2179 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2179 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2179 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"66b53df3-9ace-4094-ab11-9e01c99aedd1","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@1839474b
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
31   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
67   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
67   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
80   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
80   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
84   [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
84   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
84   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
84   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
100  [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
100  [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
100  [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
100  [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
100  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
100  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
100  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
100  [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
101  [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
101  [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
101  [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
101  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
105  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
105  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2214 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2214 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2216 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2216 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2216 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2216 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2216 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2216 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2217 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2217 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2217 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:06:09 GMT[\r][\n]"
2217 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2217 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2217 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2217 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2217 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2217 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2217 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2217 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2217 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2219 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2219 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2220 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2221 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2221 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2221 [main] DEBUG httpclient.wire.content  - << "4"
2221 [main] DEBUG httpclient.wire.content  - << "3"
2221 [main] DEBUG httpclient.wire.content  - << "[\r]"
2222 [main] DEBUG httpclient.wire.content  - << "[\n]"
2222 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'ExistingUser' found","status":"OK"}"
2222 [main] DEBUG httpclient.wire.content  - << "[\r]"
2222 [main] DEBUG httpclient.wire.content  - << "[\n]"
2222 [main] DEBUG httpclient.wire.content  - << "0"
2222 [main] DEBUG httpclient.wire.content  - << "[\r]"
2222 [main] DEBUG httpclient.wire.content  - << "[\n]"
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2222 [main] DEBUG httpclient.wire.content  - << "[\r]"
2222 [main] DEBUG httpclient.wire.content  - << "[\n]"
2222 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2222 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2222 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2222 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2223 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2223 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2223 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2223 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'ExistingUser' found","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@1c39bf12
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
30   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
78   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
78   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
82   [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
82   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
82   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
82   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
82   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
83   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
83   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
83   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
97   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
98   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
98   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
98   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
98   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
98   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
99   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
99   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
99   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
99   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
99   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
99   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
99   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
102  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
102  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2167 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2167 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2170 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2170 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2170 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2170 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2170 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2170 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2171 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2171 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2171 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:07:47 GMT[\r][\n]"
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2171 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2172 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2172 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2172 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2172 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2172 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2172 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2172 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2174 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2174 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2176 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2177 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2177 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2178 [main] DEBUG httpclient.wire.content  - << "4"
2178 [main] DEBUG httpclient.wire.content  - << "3"
2178 [main] DEBUG httpclient.wire.content  - << "[\r]"
2178 [main] DEBUG httpclient.wire.content  - << "[\n]"
2178 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'ExistingUser' found","status":"OK"}"
2178 [main] DEBUG httpclient.wire.content  - << "[\r]"
2178 [main] DEBUG httpclient.wire.content  - << "[\n]"
2179 [main] DEBUG httpclient.wire.content  - << "0"
2179 [main] DEBUG httpclient.wire.content  - << "[\r]"
2179 [main] DEBUG httpclient.wire.content  - << "[\n]"
2179 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2179 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2179 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2179 [main] DEBUG httpclient.wire.content  - << "[\r]"
2179 [main] DEBUG httpclient.wire.content  - << "[\n]"
2179 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2179 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2179 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2179 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2180 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2180 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2180 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2180 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'ExistingUser' found","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@2fc5809e
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
27   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
63   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
63   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
76   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
76   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
76   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
79   [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
79   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
79   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
79   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
79   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
80   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
96   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
96   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
96   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
96   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
97   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
97   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
97   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
97   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
97   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
100  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
100  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164827 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
164827 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
164830 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
164830 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
164830 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
164830 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
164830 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164831 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164831 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164831 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164831 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:11:00 GMT[\r][\n]"
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
164831 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164832 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
164832 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
164832 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
164832 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
164832 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
164832 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
164832 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
164834 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
164834 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
164835 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
164837 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
164837 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
164837 [main] DEBUG httpclient.wire.content  - << "4"
164837 [main] DEBUG httpclient.wire.content  - << "3"
164837 [main] DEBUG httpclient.wire.content  - << "[\r]"
164837 [main] DEBUG httpclient.wire.content  - << "[\n]"
164837 [main] DEBUG httpclient.wire.content  - << "{"object":null,"message":"user 'ExistingUser' found","status":"OK"}"
164837 [main] DEBUG httpclient.wire.content  - << "[\r]"
164837 [main] DEBUG httpclient.wire.content  - << "[\n]"
164837 [main] DEBUG httpclient.wire.content  - << "0"
164837 [main] DEBUG httpclient.wire.content  - << "[\r]"
164837 [main] DEBUG httpclient.wire.content  - << "[\n]"
164837 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
164838 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
164838 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
164838 [main] DEBUG httpclient.wire.content  - << "[\r]"
164838 [main] DEBUG httpclient.wire.content  - << "[\n]"
164838 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
164838 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
164838 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
164838 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
164838 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
164838 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
164838 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
164838 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":null,"message":"user 'ExistingUser' found","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@4e1263db
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
31   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
39   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
76   [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
76   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
76   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
93   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
93   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
93   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
94   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
94   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
94   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
94   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
94   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
98   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
98   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2220 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2220 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2221 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2222 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2222 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2222 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2222 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2222 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2223 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:11:41 GMT[\r][\n]"
2223 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2223 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2223 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2223 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2223 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2223 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2223 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2223 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2223 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2224 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2224 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2226 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2228 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2228 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2228 [main] DEBUG httpclient.wire.content  - << "3"
2228 [main] DEBUG httpclient.wire.content  - << "5"
2228 [main] DEBUG httpclient.wire.content  - << "[\r]"
2228 [main] DEBUG httpclient.wire.content  - << "[\n]"
2228 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2229 [main] DEBUG httpclient.wire.content  - << "[\r]"
2229 [main] DEBUG httpclient.wire.content  - << "[\n]"
2229 [main] DEBUG httpclient.wire.content  - << "0"
2229 [main] DEBUG httpclient.wire.content  - << "[\r]"
2229 [main] DEBUG httpclient.wire.content  - << "[\n]"
2229 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2229 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2229 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2229 [main] DEBUG httpclient.wire.content  - << "[\r]"
2229 [main] DEBUG httpclient.wire.content  - << "[\n]"
2230 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2230 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2230 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2230 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2230 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2230 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2230 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2230 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@30d647d8
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
24   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
26   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
26   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
68   [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
85   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
85   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1896 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1896 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1898 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
1898 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1898 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1898 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1898 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1898 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
1898 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1899 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1899 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1899 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:12:24 GMT[\r][\n]"
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1899 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1899 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1900 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
1900 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
1900 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
1900 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
1900 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1900 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
1901 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
1902 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
1903 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
1904 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
1904 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
1904 [main] DEBUG httpclient.wire.content  - << "3"
1904 [main] DEBUG httpclient.wire.content  - << "5"
1904 [main] DEBUG httpclient.wire.content  - << "[\r]"
1905 [main] DEBUG httpclient.wire.content  - << "[\n]"
1905 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
1905 [main] DEBUG httpclient.wire.content  - << "[\r]"
1905 [main] DEBUG httpclient.wire.content  - << "[\n]"
1905 [main] DEBUG httpclient.wire.content  - << "0"
1905 [main] DEBUG httpclient.wire.content  - << "[\r]"
1905 [main] DEBUG httpclient.wire.content  - << "[\n]"
1905 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1905 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1905 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1905 [main] DEBUG httpclient.wire.content  - << "[\r]"
1906 [main] DEBUG httpclient.wire.content  - << "[\n]"
1906 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1906 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
1906 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
1906 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
1906 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
1906 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
1906 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
1906 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@18f42160
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
28   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
72   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
90   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
91   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
91   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
91   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
92   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
92   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
92   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
95   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
95   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2371 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2372 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2374 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2374 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2374 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2374 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2374 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2374 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2375 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:12:34 GMT[\r][\n]"
2375 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2375 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2375 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2375 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2375 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2375 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2375 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2375 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2375 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2376 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2376 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2377 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2378 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2378 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2378 [main] DEBUG httpclient.wire.content  - << "1"
2378 [main] DEBUG httpclient.wire.content  - << "f"
2378 [main] DEBUG httpclient.wire.content  - << "6"
2378 [main] DEBUG httpclient.wire.content  - << "9"
2378 [main] DEBUG httpclient.wire.content  - << "[\r]"
2379 [main] DEBUG httpclient.wire.content  - << "[\n]"
2379 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:12:33.805+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2380 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:12:34.255+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:12:34.255+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2380 [main] DEBUG httpclient.wire.content  - << "[\r]"
2381 [main] DEBUG httpclient.wire.content  - << "[\n]"
2381 [main] DEBUG httpclient.wire.content  - << "0"
2381 [main] DEBUG httpclient.wire.content  - << "[\r]"
2381 [main] DEBUG httpclient.wire.content  - << "[\n]"
2381 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2381 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2381 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2381 [main] DEBUG httpclient.wire.content  - << "[\r]"
2381 [main] DEBUG httpclient.wire.content  - << "[\n]"
2381 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2381 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2381 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2381 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2381 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2381 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2382 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2382 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:12:33.805+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:12:34.255+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:12:34.255+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2387 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2387 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2387 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2387 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2387 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2387 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2388 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2388 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2388 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2388 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2389 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2389 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2389 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2389 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2389 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2389 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2389 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2389 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2389 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2390 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2390 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2390 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2390 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2390 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2390 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2390 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2390 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2400 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2400 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2400 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2400 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2401 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2401 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2401 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:12:34 GMT[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2401 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2402 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2402 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2402 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2402 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2402 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2402 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2402 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2402 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2402 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2402 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2402 [main] DEBUG httpclient.wire.content  - << "3"
2402 [main] DEBUG httpclient.wire.content  - << "5"
2402 [main] DEBUG httpclient.wire.content  - << "[\r]"
2402 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2403 [main] DEBUG httpclient.wire.content  - << "[\r]"
2403 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG httpclient.wire.content  - << "0"
2403 [main] DEBUG httpclient.wire.content  - << "[\r]"
2403 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2403 [main] DEBUG httpclient.wire.content  - << "[\r]"
2403 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2403 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2404 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2404 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2404 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2406 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2406 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2407 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2407 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2407 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2408 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2408 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2408 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2408 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2409 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2409 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2409 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2416 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2417 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2417 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2417 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2417 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2417 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2418 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:12:34 GMT[\r][\n]"
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2418 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2418 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2419 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2419 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2419 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2419 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2419 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2419 [main] DEBUG httpclient.wire.content  - << "3"
2419 [main] DEBUG httpclient.wire.content  - << "d"
2419 [main] DEBUG httpclient.wire.content  - << "[\r]"
2419 [main] DEBUG httpclient.wire.content  - << "[\n]"
2419 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2419 [main] DEBUG httpclient.wire.content  - << "[\r]"
2419 [main] DEBUG httpclient.wire.content  - << "[\n]"
2420 [main] DEBUG httpclient.wire.content  - << "0"
2420 [main] DEBUG httpclient.wire.content  - << "[\r]"
2420 [main] DEBUG httpclient.wire.content  - << "[\n]"
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2420 [main] DEBUG httpclient.wire.content  - << "[\r]"
2420 [main] DEBUG httpclient.wire.content  - << "[\n]"
2420 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2420 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2420 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2420 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2421 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2421 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2421 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2421 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2431 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2431 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2431 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2431 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2431 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2431 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2433 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2434 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2434 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2434 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2436 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2437 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2437 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2437 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2437 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2439 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2439 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2439 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2439 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2439 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2439 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2440 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2440 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2440 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2440 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2453 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2453 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2453 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2453 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2453 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2453 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:12:34 GMT[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2454 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2454 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2454 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2454 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2454 [main] DEBUG httpclient.wire.content  - << "6"
2454 [main] DEBUG httpclient.wire.content  - << "8"
2454 [main] DEBUG httpclient.wire.content  - << "[\r]"
2454 [main] DEBUG httpclient.wire.content  - << "[\n]"
2454 [main] DEBUG httpclient.wire.content  - << "{"object":"33bbb1db-4e73-4fd4-83d6-706569b104eb","message":"user successfully registered","status":"OK"}"
2454 [main] DEBUG httpclient.wire.content  - << "[\r]"
2454 [main] DEBUG httpclient.wire.content  - << "[\n]"
2454 [main] DEBUG httpclient.wire.content  - << "0"
2455 [main] DEBUG httpclient.wire.content  - << "[\r]"
2455 [main] DEBUG httpclient.wire.content  - << "[\n]"
2455 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2455 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2455 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2455 [main] DEBUG httpclient.wire.content  - << "[\r]"
2455 [main] DEBUG httpclient.wire.content  - << "[\n]"
2455 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2455 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2455 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2455 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2455 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"33bbb1db-4e73-4fd4-83d6-706569b104eb","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@35a8d460
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
27   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
68   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
84   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
84   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
84   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
84   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
84   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
85   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1970 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1970 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1972 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
1972 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1972 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1972 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1972 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1972 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
1972 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1972 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1972 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
1972 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1973 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1973 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
1973 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1973 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1973 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:13:48 GMT[\r][\n]"
1973 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1973 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1973 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1973 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
1973 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
1973 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
1973 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
1973 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1973 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
1974 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
1974 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
1975 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
1976 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
1976 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
1976 [main] DEBUG httpclient.wire.content  - << "1"
1976 [main] DEBUG httpclient.wire.content  - << "f"
1977 [main] DEBUG httpclient.wire.content  - << "6"
1977 [main] DEBUG httpclient.wire.content  - << "9"
1977 [main] DEBUG httpclient.wire.content  - << "[\r]"
1977 [main] DEBUG httpclient.wire.content  - << "[\n]"
1978 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:13:48.593+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
1979 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:13:48.661+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:13:48.661+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
1979 [main] DEBUG httpclient.wire.content  - << "[\r]"
1979 [main] DEBUG httpclient.wire.content  - << "[\n]"
1979 [main] DEBUG httpclient.wire.content  - << "0"
1979 [main] DEBUG httpclient.wire.content  - << "[\r]"
1979 [main] DEBUG httpclient.wire.content  - << "[\n]"
1979 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1979 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1979 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1979 [main] DEBUG httpclient.wire.content  - << "[\r]"
1979 [main] DEBUG httpclient.wire.content  - << "[\n]"
1979 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1979 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
1979 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
1979 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
1980 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
1980 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
1980 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
1980 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:13:48.593+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:13:48.661+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:13:48.661+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
1984 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
1984 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
1984 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
1984 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
1984 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
1984 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
1985 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
1985 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
1985 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
1985 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
1985 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
1986 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
1986 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
1986 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
1986 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
1986 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
1986 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
1986 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
1986 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
1986 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
1987 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
1987 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
1987 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
1987 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1987 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1997 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1997 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1997 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
1997 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1997 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1998 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1998 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1998 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1998 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:13:48 GMT[\r][\n]"
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1998 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1999 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
1999 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
1999 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
1999 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
1999 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
1999 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
1999 [main] DEBUG httpclient.wire.content  - << "3"
1999 [main] DEBUG httpclient.wire.content  - << "5"
1999 [main] DEBUG httpclient.wire.content  - << "[\r]"
2000 [main] DEBUG httpclient.wire.content  - << "[\n]"
2000 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2000 [main] DEBUG httpclient.wire.content  - << "[\r]"
2000 [main] DEBUG httpclient.wire.content  - << "[\n]"
2000 [main] DEBUG httpclient.wire.content  - << "0"
2000 [main] DEBUG httpclient.wire.content  - << "[\r]"
2000 [main] DEBUG httpclient.wire.content  - << "[\n]"
2000 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2000 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2000 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2000 [main] DEBUG httpclient.wire.content  - << "[\r]"
2000 [main] DEBUG httpclient.wire.content  - << "[\n]"
2000 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2001 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2001 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2001 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2001 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2001 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2001 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2001 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2003 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2003 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2003 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2003 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2003 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2004 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2004 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2004 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2004 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2004 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2004 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2004 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2004 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2005 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2005 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2005 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2005 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2005 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2005 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2005 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2005 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2006 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2006 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2006 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2006 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2006 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2006 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2006 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2009 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2010 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2010 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2011 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:13:48 GMT[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2011 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2011 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2012 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2012 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2012 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2012 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2012 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2012 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2012 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2012 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2012 [main] DEBUG httpclient.wire.content  - << "3"
2012 [main] DEBUG httpclient.wire.content  - << "d"
2012 [main] DEBUG httpclient.wire.content  - << "[\r]"
2012 [main] DEBUG httpclient.wire.content  - << "[\n]"
2012 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2013 [main] DEBUG httpclient.wire.content  - << "[\r]"
2013 [main] DEBUG httpclient.wire.content  - << "[\n]"
2013 [main] DEBUG httpclient.wire.content  - << "0"
2013 [main] DEBUG httpclient.wire.content  - << "[\r]"
2013 [main] DEBUG httpclient.wire.content  - << "[\n]"
2013 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2013 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2013 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2013 [main] DEBUG httpclient.wire.content  - << "[\r]"
2013 [main] DEBUG httpclient.wire.content  - << "[\n]"
2013 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2013 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2013 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2013 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2014 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2014 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2014 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2014 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2024 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2024 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2024 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2024 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2024 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2024 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2024 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2024 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2024 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2024 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2025 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2025 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2026 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2026 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2026 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2026 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2026 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2027 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2027 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2027 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2027 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2027 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2027 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2027 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2029 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2029 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2030 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2030 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2030 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2030 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2031 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2031 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2032 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2032 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2032 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2032 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2032 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2032 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2032 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2032 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2047 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:13:48 GMT[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2048 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2048 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2048 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2048 [main] DEBUG httpclient.wire.content  - << "6"
2049 [main] DEBUG httpclient.wire.content  - << "8"
2049 [main] DEBUG httpclient.wire.content  - << "[\r]"
2049 [main] DEBUG httpclient.wire.content  - << "[\n]"
2049 [main] DEBUG httpclient.wire.content  - << "{"object":"e66c748a-0d73-40d5-a660-bd4357b6bd99","message":"user successfully registered","status":"OK"}"
2049 [main] DEBUG httpclient.wire.content  - << "[\r]"
2049 [main] DEBUG httpclient.wire.content  - << "[\n]"
2049 [main] DEBUG httpclient.wire.content  - << "0"
2049 [main] DEBUG httpclient.wire.content  - << "[\r]"
2049 [main] DEBUG httpclient.wire.content  - << "[\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2049 [main] DEBUG httpclient.wire.content  - << "[\r]"
2049 [main] DEBUG httpclient.wire.content  - << "[\n]"
2049 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2049 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2049 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2049 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2049 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2049 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"e66c748a-0d73-40d5-a660-bd4357b6bd99","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@4ec1a0eb
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
30   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
63   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
63   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
74   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
74   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
77   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
78   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
95   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
95   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
95   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
95   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
96   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
96   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
96   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
96   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
100  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
100  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2429 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2429 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2431 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2432 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2432 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2432 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:14:46 GMT[\r][\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2432 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2434 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2434 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2435 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2436 [main] DEBUG httpclient.wire.content  - << "1"
2436 [main] DEBUG httpclient.wire.content  - << "f"
2436 [main] DEBUG httpclient.wire.content  - << "6"
2436 [main] DEBUG httpclient.wire.content  - << "9"
2436 [main] DEBUG httpclient.wire.content  - << "[\r]"
2436 [main] DEBUG httpclient.wire.content  - << "[\n]"
2437 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:14:45.967+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2438 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:14:46.393+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:14:46.393+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2438 [main] DEBUG httpclient.wire.content  - << "[\r]"
2438 [main] DEBUG httpclient.wire.content  - << "[\n]"
2438 [main] DEBUG httpclient.wire.content  - << "0"
2438 [main] DEBUG httpclient.wire.content  - << "[\r]"
2438 [main] DEBUG httpclient.wire.content  - << "[\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2438 [main] DEBUG httpclient.wire.content  - << "[\r]"
2438 [main] DEBUG httpclient.wire.content  - << "[\n]"
2438 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2439 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2439 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:14:45.967+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:14:46.393+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:14:46.393+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2443 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2443 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2443 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2443 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2444 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2444 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2444 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2444 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2444 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2444 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2444 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2445 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2445 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2445 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2446 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2446 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2448 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2448 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2458 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2459 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:14:46 GMT[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2460 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2460 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2460 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2460 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2460 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2460 [main] DEBUG httpclient.wire.content  - << "3"
2460 [main] DEBUG httpclient.wire.content  - << "5"
2460 [main] DEBUG httpclient.wire.content  - << "[\r]"
2460 [main] DEBUG httpclient.wire.content  - << "[\n]"
2460 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2460 [main] DEBUG httpclient.wire.content  - << "[\r]"
2460 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG httpclient.wire.content  - << "0"
2461 [main] DEBUG httpclient.wire.content  - << "[\r]"
2461 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2461 [main] DEBUG httpclient.wire.content  - << "[\r]"
2461 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2461 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2461 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2461 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2461 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2461 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2464 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2464 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2464 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2464 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2465 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2466 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2466 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2466 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2466 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2466 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2466 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2466 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2466 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2466 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2467 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2467 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2467 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2470 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2470 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2470 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2470 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2470 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2470 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2470 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2470 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2470 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2470 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2471 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2471 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2471 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:14:46 GMT[\r][\n]"
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2471 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2471 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2472 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2472 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2472 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2472 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2472 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2472 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2472 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2472 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2472 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2472 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2472 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2472 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2472 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2472 [main] DEBUG httpclient.wire.content  - << "3"
2473 [main] DEBUG httpclient.wire.content  - << "d"
2473 [main] DEBUG httpclient.wire.content  - << "[\r]"
2473 [main] DEBUG httpclient.wire.content  - << "[\n]"
2473 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2473 [main] DEBUG httpclient.wire.content  - << "[\r]"
2473 [main] DEBUG httpclient.wire.content  - << "[\n]"
2473 [main] DEBUG httpclient.wire.content  - << "0"
2473 [main] DEBUG httpclient.wire.content  - << "[\r]"
2473 [main] DEBUG httpclient.wire.content  - << "[\n]"
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2473 [main] DEBUG httpclient.wire.content  - << "[\r]"
2473 [main] DEBUG httpclient.wire.content  - << "[\n]"
2474 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2474 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2474 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2485 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2485 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2485 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2485 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2485 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2485 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2485 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2485 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2485 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2485 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2486 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2486 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2486 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2487 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2487 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2487 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2487 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2487 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2487 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2487 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2488 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2489 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2489 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2489 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2489 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2489 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2491 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2491 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2491 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2491 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2491 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2492 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2492 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2492 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2492 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2493 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2493 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2493 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2493 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2493 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2494 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2494 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2494 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2494 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2494 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2494 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2494 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2494 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2494 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2494 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2495 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2527 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2527 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2527 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2527 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2527 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2527 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2527 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2527 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:14:46 GMT[\r][\n]"
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2527 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2528 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2528 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2528 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2528 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2528 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2528 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2528 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2528 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2528 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2528 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2528 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2528 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2528 [main] DEBUG httpclient.wire.content  - << "6"
2528 [main] DEBUG httpclient.wire.content  - << "8"
2528 [main] DEBUG httpclient.wire.content  - << "[\r]"
2528 [main] DEBUG httpclient.wire.content  - << "[\n]"
2528 [main] DEBUG httpclient.wire.content  - << "{"object":"203c59be-7642-43cb-903d-1efa660a637d","message":"user successfully registered","status":"OK"}"
2528 [main] DEBUG httpclient.wire.content  - << "[\r]"
2528 [main] DEBUG httpclient.wire.content  - << "[\n]"
2528 [main] DEBUG httpclient.wire.content  - << "0"
2528 [main] DEBUG httpclient.wire.content  - << "[\r]"
2529 [main] DEBUG httpclient.wire.content  - << "[\n]"
2529 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2529 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2529 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2529 [main] DEBUG httpclient.wire.content  - << "[\r]"
2529 [main] DEBUG httpclient.wire.content  - << "[\n]"
2529 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2529 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2529 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2529 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2529 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2529 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2529 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2529 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"203c59be-7642-43cb-903d-1efa660a637d","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@4876db09
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
69   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
85   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
85   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
89   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
89   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1997 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1997 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
1999 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
1999 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1999 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1999 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1999 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
1999 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2000 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2000 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:15:36 GMT[\r][\n]"
2000 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2000 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2000 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2000 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2000 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2000 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2001 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2001 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2001 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2002 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2003 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2004 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2006 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2006 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2006 [main] DEBUG httpclient.wire.content  - << "1"
2006 [main] DEBUG httpclient.wire.content  - << "f"
2006 [main] DEBUG httpclient.wire.content  - << "6"
2006 [main] DEBUG httpclient.wire.content  - << "9"
2006 [main] DEBUG httpclient.wire.content  - << "[\r]"
2007 [main] DEBUG httpclient.wire.content  - << "[\n]"
2008 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:15:35.701+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2010 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:15:35.767+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:15:35.767+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2010 [main] DEBUG httpclient.wire.content  - << "[\r]"
2010 [main] DEBUG httpclient.wire.content  - << "[\n]"
2010 [main] DEBUG httpclient.wire.content  - << "0"
2010 [main] DEBUG httpclient.wire.content  - << "[\r]"
2010 [main] DEBUG httpclient.wire.content  - << "[\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.content  - << "[\r]"
2011 [main] DEBUG httpclient.wire.content  - << "[\n]"
2011 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2011 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2011 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2011 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2011 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2011 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:15:35.701+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:15:35.767+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:15:35.767+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2017 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2017 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2017 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2017 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2021 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2022 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2022 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2022 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2022 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2023 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2023 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2023 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2023 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2024 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2024 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2024 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2034 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2034 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2035 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2036 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2037 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2037 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2038 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:15:36 GMT[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2038 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2038 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2038 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2039 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2039 [main] DEBUG httpclient.wire.content  - << "3"
2039 [main] DEBUG httpclient.wire.content  - << "5"
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG httpclient.wire.content  - << "0"
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2039 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2039 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2040 [main] DEBUG httpclient.wire.content  - << "[\r]"
2040 [main] DEBUG httpclient.wire.content  - << "[\n]"
2040 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2040 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2040 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2042 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2042 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2042 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2042 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2042 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2045 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2045 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2045 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2046 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2046 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2046 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2047 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2047 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2047 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2048 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2048 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2053 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2053 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2054 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2054 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2054 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2054 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:15:36 GMT[\r][\n]"
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2055 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2055 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2055 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2055 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2055 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2055 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2055 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2055 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2055 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2055 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2055 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2056 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2056 [main] DEBUG httpclient.wire.content  - << "3"
2056 [main] DEBUG httpclient.wire.content  - << "d"
2056 [main] DEBUG httpclient.wire.content  - << "[\r]"
2056 [main] DEBUG httpclient.wire.content  - << "[\n]"
2056 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2056 [main] DEBUG httpclient.wire.content  - << "[\r]"
2056 [main] DEBUG httpclient.wire.content  - << "[\n]"
2056 [main] DEBUG httpclient.wire.content  - << "0"
2056 [main] DEBUG httpclient.wire.content  - << "[\r]"
2056 [main] DEBUG httpclient.wire.content  - << "[\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.content  - << "[\r]"
2057 [main] DEBUG httpclient.wire.content  - << "[\n]"
2057 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2057 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2057 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2067 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2067 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2067 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2067 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2067 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2067 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2068 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2068 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2068 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2068 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2068 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2068 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2068 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2068 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2069 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2070 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2073 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2073 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2073 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2073 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2073 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2074 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2074 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2074 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2074 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2075 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2075 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2075 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2075 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2075 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2075 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2075 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2075 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2092 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2092 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2093 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2093 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2093 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2093 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:15:36 GMT[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2094 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2094 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2094 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2094 [main] DEBUG httpclient.wire.content  - << "6"
2094 [main] DEBUG httpclient.wire.content  - << "8"
2094 [main] DEBUG httpclient.wire.content  - << "[\r]"
2094 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.content  - << "{"object":"3aedad98-4dda-4a7f-bb76-19bc08bba168","message":"user successfully registered","status":"OK"}"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.content  - << "0"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2095 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2095 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2095 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2095 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2095 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"3aedad98-4dda-4a7f-bb76-19bc08bba168","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@5578920a
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
27   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
66   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
87   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
87   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
88   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
88   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
92   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
92   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2421 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2421 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2423 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:16:51 GMT[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2426 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2426 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2428 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2428 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2428 [main] DEBUG httpclient.wire.content  - << "1"
2428 [main] DEBUG httpclient.wire.content  - << "f"
2428 [main] DEBUG httpclient.wire.content  - << "6"
2428 [main] DEBUG httpclient.wire.content  - << "9"
2429 [main] DEBUG httpclient.wire.content  - << "[\r]"
2429 [main] DEBUG httpclient.wire.content  - << "[\n]"
2430 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:16:50.670+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2431 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:16:51.109+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:16:51.110+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2431 [main] DEBUG httpclient.wire.content  - << "[\r]"
2431 [main] DEBUG httpclient.wire.content  - << "[\n]"
2431 [main] DEBUG httpclient.wire.content  - << "0"
2431 [main] DEBUG httpclient.wire.content  - << "[\r]"
2431 [main] DEBUG httpclient.wire.content  - << "[\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2431 [main] DEBUG httpclient.wire.content  - << "[\r]"
2431 [main] DEBUG httpclient.wire.content  - << "[\n]"
2431 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2432 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2432 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:16:50.670+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:16:51.109+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:16:51.110+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2437 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2437 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2437 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2438 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2439 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2439 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2439 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2440 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2440 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2440 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2440 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2440 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2440 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2440 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2440 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2440 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2451 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2451 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2451 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2451 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2451 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2452 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2452 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2452 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2452 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:16:51 GMT[\r][\n]"
2452 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2453 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2453 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2453 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2453 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2453 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2453 [main] DEBUG httpclient.wire.content  - << "3"
2453 [main] DEBUG httpclient.wire.content  - << "5"
2453 [main] DEBUG httpclient.wire.content  - << "[\r]"
2453 [main] DEBUG httpclient.wire.content  - << "[\n]"
2453 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2453 [main] DEBUG httpclient.wire.content  - << "[\r]"
2453 [main] DEBUG httpclient.wire.content  - << "[\n]"
2454 [main] DEBUG httpclient.wire.content  - << "0"
2454 [main] DEBUG httpclient.wire.content  - << "[\r]"
2454 [main] DEBUG httpclient.wire.content  - << "[\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2454 [main] DEBUG httpclient.wire.content  - << "[\r]"
2454 [main] DEBUG httpclient.wire.content  - << "[\n]"
2454 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2454 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2454 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2457 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2457 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2457 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2457 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2457 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2457 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2457 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2458 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2459 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2459 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2459 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2459 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2460 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2460 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2464 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2465 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2465 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2466 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2466 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2466 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2466 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2466 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2466 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2467 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:16:51 GMT[\r][\n]"
2467 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2467 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2467 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2467 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2467 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2467 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2467 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2467 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2467 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2467 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2468 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2468 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2468 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2468 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2468 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2468 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2468 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2468 [main] DEBUG httpclient.wire.content  - << "3"
2468 [main] DEBUG httpclient.wire.content  - << "d"
2468 [main] DEBUG httpclient.wire.content  - << "[\r]"
2468 [main] DEBUG httpclient.wire.content  - << "[\n]"
2468 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2468 [main] DEBUG httpclient.wire.content  - << "[\r]"
2468 [main] DEBUG httpclient.wire.content  - << "[\n]"
2469 [main] DEBUG httpclient.wire.content  - << "0"
2469 [main] DEBUG httpclient.wire.content  - << "[\r]"
2469 [main] DEBUG httpclient.wire.content  - << "[\n]"
2469 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2469 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2469 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2469 [main] DEBUG httpclient.wire.content  - << "[\r]"
2469 [main] DEBUG httpclient.wire.content  - << "[\n]"
2469 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2469 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2469 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2469 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2469 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2469 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2470 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2470 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2479 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2479 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2479 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2479 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2479 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2479 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2479 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2479 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2480 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2480 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2480 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2480 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2480 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2481 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2482 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2483 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2483 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2485 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2485 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2485 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2485 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2485 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2485 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2486 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2486 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2486 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2486 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2486 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2487 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2487 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2487 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2487 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2487 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2487 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2487 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2488 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2488 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2488 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2488 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2488 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2488 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2488 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2503 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2503 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2503 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2504 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2504 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2504 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2504 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2504 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:16:51 GMT[\r][\n]"
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2504 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2504 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2504 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2504 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2504 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2504 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2504 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2504 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2504 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2505 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2505 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2505 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2505 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2505 [main] DEBUG httpclient.wire.content  - << "6"
2505 [main] DEBUG httpclient.wire.content  - << "8"
2505 [main] DEBUG httpclient.wire.content  - << "[\r]"
2505 [main] DEBUG httpclient.wire.content  - << "[\n]"
2505 [main] DEBUG httpclient.wire.content  - << "{"object":"9f98fb8e-0995-43be-9511-e142f4e6a0d8","message":"user successfully registered","status":"OK"}"
2505 [main] DEBUG httpclient.wire.content  - << "[\r]"
2505 [main] DEBUG httpclient.wire.content  - << "[\n]"
2505 [main] DEBUG httpclient.wire.content  - << "0"
2505 [main] DEBUG httpclient.wire.content  - << "[\r]"
2505 [main] DEBUG httpclient.wire.content  - << "[\n]"
2505 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2505 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2505 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2505 [main] DEBUG httpclient.wire.content  - << "[\r]"
2505 [main] DEBUG httpclient.wire.content  - << "[\n]"
2505 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2505 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2506 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2506 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2506 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2506 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2506 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2506 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"9f98fb8e-0995-43be-9511-e142f4e6a0d8","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@6087e704
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
29   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
73   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
92   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
92   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
92   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
93   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
93   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
93   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
93   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
93   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
93   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
95   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
95   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2044 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2044 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2046 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:17:41 GMT[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2047 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2047 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2047 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2049 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2049 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2051 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2051 [main] DEBUG httpclient.wire.content  - << "1"
2051 [main] DEBUG httpclient.wire.content  - << "f"
2051 [main] DEBUG httpclient.wire.content  - << "6"
2051 [main] DEBUG httpclient.wire.content  - << "9"
2051 [main] DEBUG httpclient.wire.content  - << "[\r]"
2051 [main] DEBUG httpclient.wire.content  - << "[\n]"
2052 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:17:41.219+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2053 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:17:41.282+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:17:41.282+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG httpclient.wire.content  - << "0"
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2054 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2054 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:17:41.219+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:17:41.282+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:17:41.282+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2059 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2059 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2059 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2061 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2062 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2062 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2062 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2062 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2063 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2076 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2076 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2076 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2076 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2076 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2077 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2077 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:17:41 GMT[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2077 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2077 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2077 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2077 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2078 [main] DEBUG httpclient.wire.content  - << "3"
2078 [main] DEBUG httpclient.wire.content  - << "5"
2078 [main] DEBUG httpclient.wire.content  - << "[\r]"
2078 [main] DEBUG httpclient.wire.content  - << "[\n]"
2078 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2078 [main] DEBUG httpclient.wire.content  - << "[\r]"
2078 [main] DEBUG httpclient.wire.content  - << "[\n]"
2078 [main] DEBUG httpclient.wire.content  - << "0"
2078 [main] DEBUG httpclient.wire.content  - << "[\r]"
2078 [main] DEBUG httpclient.wire.content  - << "[\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2078 [main] DEBUG httpclient.wire.content  - << "[\r]"
2078 [main] DEBUG httpclient.wire.content  - << "[\n]"
2078 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2079 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2079 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2081 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2081 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2081 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2082 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2082 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2082 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2084 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2084 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2084 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2085 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2085 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2085 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2086 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2086 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2087 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2087 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2087 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2090 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:17:41 GMT[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2092 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2092 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2092 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2092 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2093 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2093 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2093 [main] DEBUG httpclient.wire.content  - << "3"
2093 [main] DEBUG httpclient.wire.content  - << "d"
2093 [main] DEBUG httpclient.wire.content  - << "[\r]"
2093 [main] DEBUG httpclient.wire.content  - << "[\n]"
2093 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2093 [main] DEBUG httpclient.wire.content  - << "[\r]"
2093 [main] DEBUG httpclient.wire.content  - << "[\n]"
2093 [main] DEBUG httpclient.wire.content  - << "0"
2093 [main] DEBUG httpclient.wire.content  - << "[\r]"
2093 [main] DEBUG httpclient.wire.content  - << "[\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.content  - << "[\r]"
2094 [main] DEBUG httpclient.wire.content  - << "[\n]"
2094 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2094 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2094 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2103 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2103 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2103 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2103 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2103 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2103 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2104 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2104 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2104 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2104 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2105 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2106 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2106 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2106 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2108 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2109 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2109 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2109 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2109 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2109 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2109 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2109 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2109 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2109 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2110 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2110 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2110 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2110 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2111 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2111 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2111 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2111 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2111 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2111 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2111 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2111 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2111 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2111 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2111 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2112 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2112 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2127 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2128 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2128 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2128 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2128 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2128 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2128 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2128 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:17:41 GMT[\r][\n]"
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2128 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2128 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2129 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2129 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2129 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2129 [main] DEBUG httpclient.wire.content  - << "6"
2129 [main] DEBUG httpclient.wire.content  - << "8"
2129 [main] DEBUG httpclient.wire.content  - << "[\r]"
2129 [main] DEBUG httpclient.wire.content  - << "[\n]"
2129 [main] DEBUG httpclient.wire.content  - << "{"object":"ed82887e-d78d-434a-bd6a-8714a6a38c00","message":"user successfully registered","status":"OK"}"
2129 [main] DEBUG httpclient.wire.content  - << "[\r]"
2129 [main] DEBUG httpclient.wire.content  - << "[\n]"
2129 [main] DEBUG httpclient.wire.content  - << "0"
2129 [main] DEBUG httpclient.wire.content  - << "[\r]"
2129 [main] DEBUG httpclient.wire.content  - << "[\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2130 [main] DEBUG httpclient.wire.content  - << "[\r]"
2130 [main] DEBUG httpclient.wire.content  - << "[\n]"
2130 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2130 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2130 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2130 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2130 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2130 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"ed82887e-d78d-434a-bd6a-8714a6a38c00","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@4cd297c0
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
29   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
65   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
71   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
71   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
83   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
83   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
83   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
87   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
103  [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
103  [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
103  [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
103  [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
103  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
104  [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
104  [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
104  [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
104  [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
104  [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
106  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
106  [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
1    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@25dd9891
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
28   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
59   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
72   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
90   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
91   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2012 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2012 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2014 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2014 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2014 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2014 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2014 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:19:30 GMT[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2016 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2017 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2017 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2018 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2019 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2019 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2019 [main] DEBUG httpclient.wire.content  - << "1"
2019 [main] DEBUG httpclient.wire.content  - << "f"
2019 [main] DEBUG httpclient.wire.content  - << "6"
2019 [main] DEBUG httpclient.wire.content  - << "9"
2019 [main] DEBUG httpclient.wire.content  - << "[\r]"
2019 [main] DEBUG httpclient.wire.content  - << "[\n]"
2020 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:19:30.339+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2022 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:19:30.407+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:19:30.407+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2022 [main] DEBUG httpclient.wire.content  - << "[\r]"
2022 [main] DEBUG httpclient.wire.content  - << "[\n]"
2022 [main] DEBUG httpclient.wire.content  - << "0"
2022 [main] DEBUG httpclient.wire.content  - << "[\r]"
2022 [main] DEBUG httpclient.wire.content  - << "[\n]"
2022 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2022 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2022 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2022 [main] DEBUG httpclient.wire.content  - << "[\r]"
2022 [main] DEBUG httpclient.wire.content  - << "[\n]"
2022 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2023 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2023 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:19:30.339+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:19:30.407+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:19:30.407+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2028 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2028 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2028 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2028 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2028 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2029 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2030 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2030 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2030 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2030 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2031 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2031 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2031 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2031 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2043 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:19:30 GMT[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2044 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2044 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2044 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2044 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2044 [main] DEBUG httpclient.wire.content  - << "3"
2044 [main] DEBUG httpclient.wire.content  - << "5"
2044 [main] DEBUG httpclient.wire.content  - << "[\r]"
2044 [main] DEBUG httpclient.wire.content  - << "[\n]"
2044 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2044 [main] DEBUG httpclient.wire.content  - << "[\r]"
2044 [main] DEBUG httpclient.wire.content  - << "[\n]"
2045 [main] DEBUG httpclient.wire.content  - << "0"
2045 [main] DEBUG httpclient.wire.content  - << "[\r]"
2045 [main] DEBUG httpclient.wire.content  - << "[\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2045 [main] DEBUG httpclient.wire.content  - << "[\r]"
2045 [main] DEBUG httpclient.wire.content  - << "[\n]"
2045 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2045 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2045 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2045 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2047 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2048 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2049 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2049 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2050 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2050 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2050 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2050 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2050 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2050 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2054 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2054 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2055 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2055 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2055 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2055 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2056 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:19:30 GMT[\r][\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2056 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2056 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2057 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2057 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2057 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2057 [main] DEBUG httpclient.wire.content  - << "3"
2057 [main] DEBUG httpclient.wire.content  - << "d"
2058 [main] DEBUG httpclient.wire.content  - << "[\r]"
2058 [main] DEBUG httpclient.wire.content  - << "[\n]"
2058 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2058 [main] DEBUG httpclient.wire.content  - << "[\r]"
2058 [main] DEBUG httpclient.wire.content  - << "[\n]"
2059 [main] DEBUG httpclient.wire.content  - << "0"
2059 [main] DEBUG httpclient.wire.content  - << "[\r]"
2059 [main] DEBUG httpclient.wire.content  - << "[\n]"
2059 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2059 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2059 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2059 [main] DEBUG httpclient.wire.content  - << "[\r]"
2059 [main] DEBUG httpclient.wire.content  - << "[\n]"
2059 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2060 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2060 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2068 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2069 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2069 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2069 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2069 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2069 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2069 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2069 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2069 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2069 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2070 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2071 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2071 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2072 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2074 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2074 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2074 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2074 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2074 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2074 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2075 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2075 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2075 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2076 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2076 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2076 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2076 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2076 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2076 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2077 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2090 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:19:30 GMT[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2091 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2091 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2091 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2091 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2091 [main] DEBUG httpclient.wire.content  - << "6"
2091 [main] DEBUG httpclient.wire.content  - << "8"
2091 [main] DEBUG httpclient.wire.content  - << "[\r]"
2091 [main] DEBUG httpclient.wire.content  - << "[\n]"
2092 [main] DEBUG httpclient.wire.content  - << "{"object":"06418559-17e5-499a-b4c5-0dbe695d003c","message":"user successfully registered","status":"OK"}"
2092 [main] DEBUG httpclient.wire.content  - << "[\r]"
2092 [main] DEBUG httpclient.wire.content  - << "[\n]"
2092 [main] DEBUG httpclient.wire.content  - << "0"
2092 [main] DEBUG httpclient.wire.content  - << "[\r]"
2092 [main] DEBUG httpclient.wire.content  - << "[\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2092 [main] DEBUG httpclient.wire.content  - << "[\r]"
2092 [main] DEBUG httpclient.wire.content  - << "[\n]"
2092 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2092 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2092 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"06418559-17e5-499a-b4c5-0dbe695d003c","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52cd19d
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
31   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
77   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
77   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
93   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
94   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
94   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
94   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
94   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
94   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
95   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
95   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
95   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
97   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
97   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2027 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2027 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2029 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2029 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2029 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2029 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2030 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2030 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2030 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:02 GMT[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2030 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2031 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2031 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2032 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2032 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2033 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2034 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2034 [main] DEBUG httpclient.wire.content  - << "1"
2034 [main] DEBUG httpclient.wire.content  - << "f"
2034 [main] DEBUG httpclient.wire.content  - << "6"
2034 [main] DEBUG httpclient.wire.content  - << "9"
2034 [main] DEBUG httpclient.wire.content  - << "[\r]"
2034 [main] DEBUG httpclient.wire.content  - << "[\n]"
2035 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:01.782+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2036 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:01.845+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:20:01.845+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2036 [main] DEBUG httpclient.wire.content  - << "[\r]"
2036 [main] DEBUG httpclient.wire.content  - << "[\n]"
2036 [main] DEBUG httpclient.wire.content  - << "0"
2036 [main] DEBUG httpclient.wire.content  - << "[\r]"
2036 [main] DEBUG httpclient.wire.content  - << "[\n]"
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2036 [main] DEBUG httpclient.wire.content  - << "[\r]"
2036 [main] DEBUG httpclient.wire.content  - << "[\n]"
2037 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2037 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2037 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2037 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2037 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2037 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2037 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2037 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:01.782+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:01.845+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:20:01.845+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2041 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2041 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2041 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2041 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2042 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2042 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2042 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2042 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2042 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2042 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2042 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2042 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2043 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2043 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2043 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2044 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2056 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2056 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2056 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2056 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:02 GMT[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2057 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2057 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2058 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2058 [main] DEBUG httpclient.wire.content  - << "3"
2058 [main] DEBUG httpclient.wire.content  - << "5"
2058 [main] DEBUG httpclient.wire.content  - << "[\r]"
2058 [main] DEBUG httpclient.wire.content  - << "[\n]"
2058 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2058 [main] DEBUG httpclient.wire.content  - << "[\r]"
2058 [main] DEBUG httpclient.wire.content  - << "[\n]"
2058 [main] DEBUG httpclient.wire.content  - << "0"
2058 [main] DEBUG httpclient.wire.content  - << "[\r]"
2058 [main] DEBUG httpclient.wire.content  - << "[\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2058 [main] DEBUG httpclient.wire.content  - << "[\r]"
2058 [main] DEBUG httpclient.wire.content  - << "[\n]"
2059 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2059 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2059 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2061 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2062 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2062 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2063 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2064 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2064 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2064 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2064 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2065 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2065 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2068 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2068 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2068 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2068 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2069 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2069 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2069 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2069 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:02 GMT[\r][\n]"
2070 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2070 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2070 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2070 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2070 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2070 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2071 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2071 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2071 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2071 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2071 [main] DEBUG httpclient.wire.content  - << "3"
2071 [main] DEBUG httpclient.wire.content  - << "d"
2071 [main] DEBUG httpclient.wire.content  - << "[\r]"
2071 [main] DEBUG httpclient.wire.content  - << "[\n]"
2071 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2071 [main] DEBUG httpclient.wire.content  - << "[\r]"
2071 [main] DEBUG httpclient.wire.content  - << "[\n]"
2072 [main] DEBUG httpclient.wire.content  - << "0"
2072 [main] DEBUG httpclient.wire.content  - << "[\r]"
2072 [main] DEBUG httpclient.wire.content  - << "[\n]"
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2072 [main] DEBUG httpclient.wire.content  - << "[\r]"
2072 [main] DEBUG httpclient.wire.content  - << "[\n]"
2072 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2072 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2072 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2072 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2073 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2073 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2073 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2082 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2082 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2082 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2082 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2082 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2082 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2082 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2082 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2083 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2083 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2083 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2083 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2083 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2084 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2084 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2084 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2085 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2086 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2086 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2087 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2089 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2089 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2089 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2089 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2089 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2089 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2089 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2090 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2090 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2090 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2090 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2090 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2091 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2091 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2091 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2091 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2091 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2092 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2105 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2105 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2105 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2106 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2106 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2106 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2106 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:02 GMT[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2106 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2106 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2106 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2106 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2106 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2107 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2107 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2107 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2107 [main] DEBUG httpclient.wire.content  - << "6"
2107 [main] DEBUG httpclient.wire.content  - << "8"
2107 [main] DEBUG httpclient.wire.content  - << "[\r]"
2107 [main] DEBUG httpclient.wire.content  - << "[\n]"
2107 [main] DEBUG httpclient.wire.content  - << "{"object":"940b5c6e-955d-4917-9e3a-fff7cfaf476a","message":"user successfully registered","status":"OK"}"
2107 [main] DEBUG httpclient.wire.content  - << "[\r]"
2107 [main] DEBUG httpclient.wire.content  - << "[\n]"
2107 [main] DEBUG httpclient.wire.content  - << "0"
2107 [main] DEBUG httpclient.wire.content  - << "[\r]"
2107 [main] DEBUG httpclient.wire.content  - << "[\n]"
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2108 [main] DEBUG httpclient.wire.content  - << "[\r]"
2108 [main] DEBUG httpclient.wire.content  - << "[\n]"
2108 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2108 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2108 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2108 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2108 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2108 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"940b5c6e-955d-4917-9e3a-fff7cfaf476a","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@40363068
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
28   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
71   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
89   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2012 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2012 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2014 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2014 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2014 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2014 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2015 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:16 GMT[\r][\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2016 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2016 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2018 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2018 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2019 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2020 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2020 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2021 [main] DEBUG httpclient.wire.content  - << "1"
2021 [main] DEBUG httpclient.wire.content  - << "f"
2021 [main] DEBUG httpclient.wire.content  - << "6"
2021 [main] DEBUG httpclient.wire.content  - << "9"
2021 [main] DEBUG httpclient.wire.content  - << "[\r]"
2021 [main] DEBUG httpclient.wire.content  - << "[\n]"
2022 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:16.104+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2023 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:16.172+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:20:16.172+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2023 [main] DEBUG httpclient.wire.content  - << "[\r]"
2023 [main] DEBUG httpclient.wire.content  - << "[\n]"
2023 [main] DEBUG httpclient.wire.content  - << "0"
2023 [main] DEBUG httpclient.wire.content  - << "[\r]"
2023 [main] DEBUG httpclient.wire.content  - << "[\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2023 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2023 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2023 [main] DEBUG httpclient.wire.content  - << "[\r]"
2023 [main] DEBUG httpclient.wire.content  - << "[\n]"
2023 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2024 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2024 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:16.104+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:20:16.172+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:20:16.172+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2029 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2029 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2029 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2030 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2031 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2031 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2031 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2031 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2031 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2032 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2032 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2034 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2034 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2045 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2045 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2045 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2045 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2045 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2046 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:16 GMT[\r][\n]"
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2046 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2046 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2046 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2046 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2046 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2046 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2046 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2047 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2047 [main] DEBUG httpclient.wire.content  - << "3"
2047 [main] DEBUG httpclient.wire.content  - << "5"
2047 [main] DEBUG httpclient.wire.content  - << "[\r]"
2047 [main] DEBUG httpclient.wire.content  - << "[\n]"
2047 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2047 [main] DEBUG httpclient.wire.content  - << "[\r]"
2047 [main] DEBUG httpclient.wire.content  - << "[\n]"
2047 [main] DEBUG httpclient.wire.content  - << "0"
2047 [main] DEBUG httpclient.wire.content  - << "[\r]"
2047 [main] DEBUG httpclient.wire.content  - << "[\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.content  - << "[\r]"
2048 [main] DEBUG httpclient.wire.content  - << "[\n]"
2048 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2048 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2048 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2051 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2051 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2051 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2052 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2052 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2052 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2053 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2053 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2053 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2053 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2054 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2057 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2057 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2058 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2058 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2058 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:16 GMT[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2058 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2058 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2059 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2059 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2059 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2059 [main] DEBUG httpclient.wire.content  - << "3"
2059 [main] DEBUG httpclient.wire.content  - << "d"
2060 [main] DEBUG httpclient.wire.content  - << "[\r]"
2060 [main] DEBUG httpclient.wire.content  - << "[\n]"
2060 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2060 [main] DEBUG httpclient.wire.content  - << "[\r]"
2060 [main] DEBUG httpclient.wire.content  - << "[\n]"
2060 [main] DEBUG httpclient.wire.content  - << "0"
2060 [main] DEBUG httpclient.wire.content  - << "[\r]"
2060 [main] DEBUG httpclient.wire.content  - << "[\n]"
2060 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2060 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2060 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2060 [main] DEBUG httpclient.wire.content  - << "[\r]"
2060 [main] DEBUG httpclient.wire.content  - << "[\n]"
2060 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2060 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2061 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2061 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2069 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2070 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2070 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2070 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2071 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2071 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2071 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2072 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2072 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2072 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2073 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2073 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2073 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2075 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2075 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2075 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2075 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2075 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2076 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2076 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2076 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2076 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2077 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2077 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2077 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2077 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2078 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2078 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2094 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2095 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:20:16 GMT[\r][\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2095 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2095 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2095 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2095 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2095 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2095 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2095 [main] DEBUG httpclient.wire.content  - << "6"
2095 [main] DEBUG httpclient.wire.content  - << "8"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.content  - << "{"object":"1d457901-bf6c-48d2-b163-283b9dfc9822","message":"user successfully registered","status":"OK"}"
2096 [main] DEBUG httpclient.wire.content  - << "[\r]"
2096 [main] DEBUG httpclient.wire.content  - << "[\n]"
2096 [main] DEBUG httpclient.wire.content  - << "0"
2096 [main] DEBUG httpclient.wire.content  - << "[\r]"
2096 [main] DEBUG httpclient.wire.content  - << "[\n]"
2096 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2096 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2096 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2096 [main] DEBUG httpclient.wire.content  - << "[\r]"
2096 [main] DEBUG httpclient.wire.content  - << "[\n]"
2096 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2096 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2096 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2096 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2096 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2096 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2096 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2096 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"1d457901-bf6c-48d2-b163-283b9dfc9822","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@44775121
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
27   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
86   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
87   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
90   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2381 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2381 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2383 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2383 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2383 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2383 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2383 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2383 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2383 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2383 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2384 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2384 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2384 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2384 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2384 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2384 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2384 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:21:16 GMT[\r][\n]"
2384 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2384 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2384 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2384 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2384 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2384 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2384 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2384 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2385 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2386 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2386 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2386 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2387 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2388 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2388 [main] DEBUG httpclient.wire.content  - << "1"
2388 [main] DEBUG httpclient.wire.content  - << "f"
2388 [main] DEBUG httpclient.wire.content  - << "6"
2388 [main] DEBUG httpclient.wire.content  - << "9"
2388 [main] DEBUG httpclient.wire.content  - << "[\r]"
2388 [main] DEBUG httpclient.wire.content  - << "[\n]"
2389 [main] DEBUG httpclient.wire.content  - << "{"object":[{"BANANA":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:21:16.217+01:00","service":null,"mood":null},"verb":"LIKE"},{"BANANA":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2390 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:21:16.664+01:00","service":null,"mood":null},"verb":"LISTEN"},{"BANANA":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:21:16.665+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2390 [main] DEBUG httpclient.wire.content  - << "[\r]"
2390 [main] DEBUG httpclient.wire.content  - << "[\n]"
2390 [main] DEBUG httpclient.wire.content  - << "0"
2390 [main] DEBUG httpclient.wire.content  - << "[\r]"
2390 [main] DEBUG httpclient.wire.content  - << "[\n]"
2391 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2391 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2391 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2391 [main] DEBUG httpclient.wire.content  - << "[\r]"
2391 [main] DEBUG httpclient.wire.content  - << "[\n]"
2391 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2391 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2391 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2391 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2391 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2392 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"BANANA":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:21:16.217+01:00","service":null,"mood":null},"verb":"LIKE"},{"BANANA":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:21:16.664+01:00","service":null,"mood":null},"verb":"LISTEN"},{"BANANA":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:21:16.665+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2397 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2397 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2397 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2398 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2399 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2399 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2399 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2400 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2400 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2400 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2412 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2412 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2412 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2412 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:21:16 GMT[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2413 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2413 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2413 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2413 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2413 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2414 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2414 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2414 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2414 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2414 [main] DEBUG httpclient.wire.content  - << "3"
2414 [main] DEBUG httpclient.wire.content  - << "5"
2414 [main] DEBUG httpclient.wire.content  - << "[\r]"
2414 [main] DEBUG httpclient.wire.content  - << "[\n]"
2414 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2414 [main] DEBUG httpclient.wire.content  - << "[\r]"
2414 [main] DEBUG httpclient.wire.content  - << "[\n]"
2414 [main] DEBUG httpclient.wire.content  - << "0"
2414 [main] DEBUG httpclient.wire.content  - << "[\r]"
2414 [main] DEBUG httpclient.wire.content  - << "[\n]"
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2414 [main] DEBUG httpclient.wire.content  - << "[\r]"
2414 [main] DEBUG httpclient.wire.content  - << "[\n]"
2414 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2415 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2415 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2415 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2417 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2417 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2417 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2418 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2418 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2418 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2418 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2418 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2419 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2419 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2419 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2419 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2419 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2419 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2419 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2423 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2423 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2423 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2423 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2423 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:21:16 GMT[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
