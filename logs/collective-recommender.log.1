2426 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2426 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2426 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2426 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2426 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2426 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2426 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2426 [main] DEBUG httpclient.wire.content  - << "3"
2426 [main] DEBUG httpclient.wire.content  - << "d"
2426 [main] DEBUG httpclient.wire.content  - << "[\r]"
2426 [main] DEBUG httpclient.wire.content  - << "[\n]"
2426 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2427 [main] DEBUG httpclient.wire.content  - << "[\r]"
2427 [main] DEBUG httpclient.wire.content  - << "[\n]"
2427 [main] DEBUG httpclient.wire.content  - << "0"
2427 [main] DEBUG httpclient.wire.content  - << "[\r]"
2427 [main] DEBUG httpclient.wire.content  - << "[\n]"
2427 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2427 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2427 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2427 [main] DEBUG httpclient.wire.content  - << "[\r]"
2427 [main] DEBUG httpclient.wire.content  - << "[\n]"
2427 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2427 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2428 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2428 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2428 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2428 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2437 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2437 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2437 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2437 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2437 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2437 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2437 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2437 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2437 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2437 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2439 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2439 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2440 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2440 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2440 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2440 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2442 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2442 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2442 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2442 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2443 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2443 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2443 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2443 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2443 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2443 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2444 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2444 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2444 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2444 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2444 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2444 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2445 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2472 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2472 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2473 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2473 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2473 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2473 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2473 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2473 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2474 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:21:16 GMT[\r][\n]"
2474 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2474 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2474 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2474 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2474 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2474 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2474 [main] DEBUG httpclient.wire.content  - << "6"
2475 [main] DEBUG httpclient.wire.content  - << "8"
2475 [main] DEBUG httpclient.wire.content  - << "[\r]"
2475 [main] DEBUG httpclient.wire.content  - << "[\n]"
2475 [main] DEBUG httpclient.wire.content  - << "{"object":"7cfcbc22-e94a-4353-959a-fe073ed0bd89","message":"user successfully registered","status":"OK"}"
2475 [main] DEBUG httpclient.wire.content  - << "[\r]"
2475 [main] DEBUG httpclient.wire.content  - << "[\n]"
2475 [main] DEBUG httpclient.wire.content  - << "0"
2475 [main] DEBUG httpclient.wire.content  - << "[\r]"
2475 [main] DEBUG httpclient.wire.content  - << "[\n]"
2475 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2475 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2475 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2475 [main] DEBUG httpclient.wire.content  - << "[\r]"
2475 [main] DEBUG httpclient.wire.content  - << "[\n]"
2475 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2476 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2476 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2476 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2476 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2476 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"7cfcbc22-e94a-4353-959a-fe073ed0bd89","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@3fb2d7df
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
69   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
86   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
87   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
88   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2417 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2417 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2419 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2419 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2420 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2420 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2420 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2420 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:16 GMT[\r][\n]"
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2420 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2421 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2421 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2421 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2421 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2421 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2421 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2421 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2422 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2422 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2423 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2424 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2424 [main] DEBUG httpclient.wire.content  - << "1"
2424 [main] DEBUG httpclient.wire.content  - << "f"
2424 [main] DEBUG httpclient.wire.content  - << "6"
2424 [main] DEBUG httpclient.wire.content  - << "9"
2424 [main] DEBUG httpclient.wire.content  - << "[\r]"
2425 [main] DEBUG httpclient.wire.content  - << "[\n]"
2426 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:16.119+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2427 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:16.542+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:23:16.542+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2427 [main] DEBUG httpclient.wire.content  - << "[\r]"
2427 [main] DEBUG httpclient.wire.content  - << "[\n]"
2427 [main] DEBUG httpclient.wire.content  - << "0"
2427 [main] DEBUG httpclient.wire.content  - << "[\r]"
2427 [main] DEBUG httpclient.wire.content  - << "[\n]"
2427 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2427 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2427 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2427 [main] DEBUG httpclient.wire.content  - << "[\r]"
2427 [main] DEBUG httpclient.wire.content  - << "[\n]"
2427 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2427 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2427 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2428 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2428 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:16.119+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:16.542+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:23:16.542+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2432 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2432 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2433 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2434 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2434 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2434 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2434 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2435 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2447 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2447 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2448 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2448 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2448 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2448 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2448 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2448 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:16 GMT[\r][\n]"
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2448 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2448 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2448 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2448 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2448 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2449 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2449 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2449 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2449 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2449 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2449 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2449 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2449 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2449 [main] DEBUG httpclient.wire.content  - << "3"
2449 [main] DEBUG httpclient.wire.content  - << "5"
2449 [main] DEBUG httpclient.wire.content  - << "[\r]"
2449 [main] DEBUG httpclient.wire.content  - << "[\n]"
2449 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2449 [main] DEBUG httpclient.wire.content  - << "[\r]"
2449 [main] DEBUG httpclient.wire.content  - << "[\n]"
2449 [main] DEBUG httpclient.wire.content  - << "0"
2449 [main] DEBUG httpclient.wire.content  - << "[\r]"
2449 [main] DEBUG httpclient.wire.content  - << "[\n]"
2449 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2449 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2449 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2449 [main] DEBUG httpclient.wire.content  - << "[\r]"
2449 [main] DEBUG httpclient.wire.content  - << "[\n]"
2450 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2450 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2450 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2450 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2450 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2450 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2452 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2452 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2452 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2452 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2452 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2452 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2453 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2453 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2453 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2453 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2454 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2454 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2454 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2454 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2454 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2458 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2458 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2458 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2458 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2458 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2461 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:16 GMT[\r][\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2461 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2461 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2462 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2462 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2462 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2462 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2462 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2462 [main] DEBUG httpclient.wire.content  - << "3"
2462 [main] DEBUG httpclient.wire.content  - << "d"
2462 [main] DEBUG httpclient.wire.content  - << "[\r]"
2463 [main] DEBUG httpclient.wire.content  - << "[\n]"
2463 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2463 [main] DEBUG httpclient.wire.content  - << "[\r]"
2463 [main] DEBUG httpclient.wire.content  - << "[\n]"
2463 [main] DEBUG httpclient.wire.content  - << "0"
2463 [main] DEBUG httpclient.wire.content  - << "[\r]"
2463 [main] DEBUG httpclient.wire.content  - << "[\n]"
2463 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2463 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2463 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2463 [main] DEBUG httpclient.wire.content  - << "[\r]"
2463 [main] DEBUG httpclient.wire.content  - << "[\n]"
2463 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2463 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2464 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2464 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2473 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2474 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2474 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2474 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2474 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2474 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2474 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2474 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2474 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2474 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2474 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2474 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2475 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2475 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2475 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2475 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2475 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2475 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2475 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2475 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2475 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2476 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2476 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2476 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2477 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2477 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2477 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2477 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2477 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2479 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2479 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2479 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2479 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2479 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2479 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2479 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2480 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2480 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2480 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2481 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2481 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2481 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2481 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2482 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2482 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2482 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2482 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2510 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2511 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2511 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2511 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2511 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2511 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2511 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2511 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:16 GMT[\r][\n]"
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2511 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2511 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2511 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2512 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2512 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2512 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2512 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2512 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2512 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2512 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2512 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2512 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2512 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2512 [main] DEBUG httpclient.wire.content  - << "6"
2512 [main] DEBUG httpclient.wire.content  - << "8"
2512 [main] DEBUG httpclient.wire.content  - << "[\r]"
2512 [main] DEBUG httpclient.wire.content  - << "[\n]"
2512 [main] DEBUG httpclient.wire.content  - << "{"object":"031991b2-7982-43d9-a00d-95fefbedf01d","message":"user successfully registered","status":"OK"}"
2512 [main] DEBUG httpclient.wire.content  - << "[\r]"
2512 [main] DEBUG httpclient.wire.content  - << "[\n]"
2512 [main] DEBUG httpclient.wire.content  - << "0"
2512 [main] DEBUG httpclient.wire.content  - << "[\r]"
2512 [main] DEBUG httpclient.wire.content  - << "[\n]"
2512 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2512 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2512 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2513 [main] DEBUG httpclient.wire.content  - << "[\r]"
2513 [main] DEBUG httpclient.wire.content  - << "[\n]"
2513 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2513 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2513 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2513 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2513 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2513 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2513 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2513 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"031991b2-7982-43d9-a00d-95fefbedf01d","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@78cade31
8    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
30   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
38   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
74   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
74   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
77   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
77   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
78   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
78   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
78   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
94   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
95   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
95   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
95   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
95   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
95   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
95   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
96   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
96   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
96   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
98   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
98   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2023 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2023 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2024 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2025 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2025 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2025 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2025 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:40 GMT[\r][\n]"
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2026 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2026 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2026 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2027 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2027 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2028 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2029 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2029 [main] DEBUG httpclient.wire.content  - << "1"
2029 [main] DEBUG httpclient.wire.content  - << "f"
2029 [main] DEBUG httpclient.wire.content  - << "6"
2029 [main] DEBUG httpclient.wire.content  - << "9"
2029 [main] DEBUG httpclient.wire.content  - << "[\r]"
2029 [main] DEBUG httpclient.wire.content  - << "[\n]"
2030 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:39.965+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2031 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:40.048+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:23:40.048+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2032 [main] DEBUG httpclient.wire.content  - << "[\r]"
2032 [main] DEBUG httpclient.wire.content  - << "[\n]"
2032 [main] DEBUG httpclient.wire.content  - << "0"
2032 [main] DEBUG httpclient.wire.content  - << "[\r]"
2032 [main] DEBUG httpclient.wire.content  - << "[\n]"
2032 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2032 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2032 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2032 [main] DEBUG httpclient.wire.content  - << "[\r]"
2032 [main] DEBUG httpclient.wire.content  - << "[\n]"
2032 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2032 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2032 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2032 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2032 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2033 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:39.965+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:23:40.048+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:23:40.048+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2037 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2037 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2037 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2037 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2037 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2037 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2038 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2038 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2038 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2039 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2039 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2039 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2039 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2040 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2040 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2040 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2040 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2040 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2040 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2040 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2051 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2051 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2052 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2052 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2052 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2052 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:40 GMT[\r][\n]"
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2052 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2052 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2052 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2053 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2053 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2053 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2053 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2053 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2053 [main] DEBUG httpclient.wire.content  - << "3"
2053 [main] DEBUG httpclient.wire.content  - << "5"
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG httpclient.wire.content  - << "0"
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2053 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2053 [main] DEBUG httpclient.wire.content  - << "[\r]"
2053 [main] DEBUG httpclient.wire.content  - << "[\n]"
2053 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2054 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2054 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2054 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2054 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2056 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2056 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2056 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2056 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2056 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2057 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2057 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2058 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2058 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2058 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2058 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2058 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2059 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2059 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2062 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2062 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2062 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2063 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2063 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2063 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2064 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2064 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:40 GMT[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2064 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2064 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2065 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2065 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2065 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2065 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2065 [main] DEBUG httpclient.wire.content  - << "3"
2065 [main] DEBUG httpclient.wire.content  - << "d"
2065 [main] DEBUG httpclient.wire.content  - << "[\r]"
2065 [main] DEBUG httpclient.wire.content  - << "[\n]"
2066 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2066 [main] DEBUG httpclient.wire.content  - << "[\r]"
2066 [main] DEBUG httpclient.wire.content  - << "[\n]"
2066 [main] DEBUG httpclient.wire.content  - << "0"
2066 [main] DEBUG httpclient.wire.content  - << "[\r]"
2066 [main] DEBUG httpclient.wire.content  - << "[\n]"
2066 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2066 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2066 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2066 [main] DEBUG httpclient.wire.content  - << "[\r]"
2066 [main] DEBUG httpclient.wire.content  - << "[\n]"
2066 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2066 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2067 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2067 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2067 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2067 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2067 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2067 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2077 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2077 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2077 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2077 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2077 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2077 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2077 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2078 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2080 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2080 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2080 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2082 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2082 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2083 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2083 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2083 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2083 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2083 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2083 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2083 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2083 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2083 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2084 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2084 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2084 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2084 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2085 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2085 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2085 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2085 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2085 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2085 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2086 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2099 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2099 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2099 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2099 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2099 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2099 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2099 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2099 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2099 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2099 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2099 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2099 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2100 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2100 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2100 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2100 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2100 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:23:40 GMT[\r][\n]"
2100 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2100 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2100 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2100 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2100 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2100 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2100 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2101 [main] DEBUG httpclient.wire.content  - << "6"
2101 [main] DEBUG httpclient.wire.content  - << "8"
2101 [main] DEBUG httpclient.wire.content  - << "[\r]"
2101 [main] DEBUG httpclient.wire.content  - << "[\n]"
2101 [main] DEBUG httpclient.wire.content  - << "{"object":"5ea0d3dd-edd3-43e4-9cf1-910f7907da75","message":"user successfully registered","status":"OK"}"
2101 [main] DEBUG httpclient.wire.content  - << "[\r]"
2101 [main] DEBUG httpclient.wire.content  - << "[\n]"
2101 [main] DEBUG httpclient.wire.content  - << "0"
2101 [main] DEBUG httpclient.wire.content  - << "[\r]"
2101 [main] DEBUG httpclient.wire.content  - << "[\n]"
2101 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2101 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2101 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2101 [main] DEBUG httpclient.wire.content  - << "[\r]"
2101 [main] DEBUG httpclient.wire.content  - << "[\n]"
2101 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2101 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2101 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2101 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2102 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2102 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"5ea0d3dd-edd3-43e4-9cf1-910f7907da75","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@3362a63
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
69   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
86   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
86   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
89   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
89   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2040 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2041 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2044 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2044 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:24:22 GMT[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2044 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2045 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2046 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2046 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2047 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2047 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2048 [main] DEBUG httpclient.wire.content  - << "1"
2048 [main] DEBUG httpclient.wire.content  - << "f"
2048 [main] DEBUG httpclient.wire.content  - << "6"
2048 [main] DEBUG httpclient.wire.content  - << "9"
2048 [main] DEBUG httpclient.wire.content  - << "[\r]"
2048 [main] DEBUG httpclient.wire.content  - << "[\n]"
2049 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:24:22.534+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2050 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:24:22.599+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:24:22.599+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2050 [main] DEBUG httpclient.wire.content  - << "[\r]"
2050 [main] DEBUG httpclient.wire.content  - << "[\n]"
2050 [main] DEBUG httpclient.wire.content  - << "0"
2050 [main] DEBUG httpclient.wire.content  - << "[\r]"
2050 [main] DEBUG httpclient.wire.content  - << "[\n]"
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2051 [main] DEBUG httpclient.wire.content  - << "[\r]"
2051 [main] DEBUG httpclient.wire.content  - << "[\n]"
2051 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2052 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2052 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:24:22.534+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:24:22.599+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:24:22.599+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2057 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2057 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2057 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2058 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2059 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2059 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2059 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2059 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2059 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2060 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2060 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2060 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2060 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2061 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2061 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2070 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2071 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2071 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2071 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2072 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2072 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:24:22 GMT[\r][\n]"
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2072 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2072 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2072 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2073 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2073 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2073 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2073 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2073 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2073 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2073 [main] DEBUG httpclient.wire.content  - << "3"
2073 [main] DEBUG httpclient.wire.content  - << "5"
2073 [main] DEBUG httpclient.wire.content  - << "[\r]"
2073 [main] DEBUG httpclient.wire.content  - << "[\n]"
2073 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2073 [main] DEBUG httpclient.wire.content  - << "[\r]"
2074 [main] DEBUG httpclient.wire.content  - << "[\n]"
2074 [main] DEBUG httpclient.wire.content  - << "0"
2074 [main] DEBUG httpclient.wire.content  - << "[\r]"
2074 [main] DEBUG httpclient.wire.content  - << "[\n]"
2074 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2074 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2074 [main] DEBUG httpclient.wire.content  - << "[\r]"
2074 [main] DEBUG httpclient.wire.content  - << "[\n]"
2074 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2074 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2074 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2074 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2075 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2075 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2075 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2077 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2077 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2078 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2078 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2079 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2080 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2080 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2080 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2081 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2081 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2081 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2081 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2081 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2081 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2085 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2085 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2085 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2085 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2085 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2085 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2085 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2085 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2086 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2086 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2086 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:24:22 GMT[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2086 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2087 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2087 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2087 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2087 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2087 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2087 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2087 [main] DEBUG httpclient.wire.content  - << "3"
2087 [main] DEBUG httpclient.wire.content  - << "d"
2087 [main] DEBUG httpclient.wire.content  - << "[\r]"
2087 [main] DEBUG httpclient.wire.content  - << "[\n]"
2087 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2088 [main] DEBUG httpclient.wire.content  - << "[\r]"
2088 [main] DEBUG httpclient.wire.content  - << "[\n]"
2088 [main] DEBUG httpclient.wire.content  - << "0"
2088 [main] DEBUG httpclient.wire.content  - << "[\r]"
2088 [main] DEBUG httpclient.wire.content  - << "[\n]"
2088 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2088 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2088 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2088 [main] DEBUG httpclient.wire.content  - << "[\r]"
2088 [main] DEBUG httpclient.wire.content  - << "[\n]"
2088 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2088 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2088 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2088 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2089 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2089 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2089 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2089 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2098 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2099 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2099 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2099 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2099 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2099 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2099 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2099 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2099 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2099 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2099 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2099 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2099 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2100 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2100 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2100 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2100 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2100 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2101 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2101 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2101 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2101 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2101 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2101 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2101 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2103 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2104 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2104 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2104 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2104 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2104 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2106 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2106 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2106 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2106 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2106 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2106 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2106 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2106 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2107 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2107 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2107 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2120 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2121 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2121 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2121 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2121 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2121 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2121 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2121 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:24:22 GMT[\r][\n]"
2121 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2122 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2122 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2122 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2122 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2122 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2122 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2122 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2122 [main] DEBUG httpclient.wire.content  - << "6"
2122 [main] DEBUG httpclient.wire.content  - << "8"
2122 [main] DEBUG httpclient.wire.content  - << "[\r]"
2122 [main] DEBUG httpclient.wire.content  - << "[\n]"
2122 [main] DEBUG httpclient.wire.content  - << "{"object":"663dc697-f816-42ea-87c0-c698830092db","message":"user successfully registered","status":"OK"}"
2122 [main] DEBUG httpclient.wire.content  - << "[\r]"
2122 [main] DEBUG httpclient.wire.content  - << "[\n]"
2123 [main] DEBUG httpclient.wire.content  - << "0"
2123 [main] DEBUG httpclient.wire.content  - << "[\r]"
2123 [main] DEBUG httpclient.wire.content  - << "[\n]"
2123 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2123 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2123 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2123 [main] DEBUG httpclient.wire.content  - << "[\r]"
2123 [main] DEBUG httpclient.wire.content  - << "[\n]"
2123 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2123 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2123 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2123 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2123 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2123 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"663dc697-f816-42ea-87c0-c698830092db","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@9818f80
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
25   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
68   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
87   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
87   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
88   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2331 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2331 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2333 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2333 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2333 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2333 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2333 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2333 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2333 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2334 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2334 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2334 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:06 GMT[\r][\n]"
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2334 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2334 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2334 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2334 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2334 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2334 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2334 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2335 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2336 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2336 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2336 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2338 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2338 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2338 [main] DEBUG httpclient.wire.content  - << "1"
2338 [main] DEBUG httpclient.wire.content  - << "f"
2338 [main] DEBUG httpclient.wire.content  - << "6"
2338 [main] DEBUG httpclient.wire.content  - << "9"
2338 [main] DEBUG httpclient.wire.content  - << "[\r]"
2338 [main] DEBUG httpclient.wire.content  - << "[\n]"
2339 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:05.790+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2340 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:06.211+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:25:06.211+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2340 [main] DEBUG httpclient.wire.content  - << "[\r]"
2340 [main] DEBUG httpclient.wire.content  - << "[\n]"
2340 [main] DEBUG httpclient.wire.content  - << "0"
2340 [main] DEBUG httpclient.wire.content  - << "[\r]"
2340 [main] DEBUG httpclient.wire.content  - << "[\n]"
2340 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2340 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2340 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2340 [main] DEBUG httpclient.wire.content  - << "[\r]"
2340 [main] DEBUG httpclient.wire.content  - << "[\n]"
2340 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2340 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2340 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2341 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2341 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2341 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2341 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2341 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:05.790+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:06.211+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:25:06.211+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2345 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2345 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2345 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2346 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2346 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2346 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2346 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2346 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2346 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2346 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2347 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2347 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2347 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2347 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2347 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2347 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2347 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2348 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2348 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2348 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2348 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2348 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2349 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2349 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2349 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2349 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2361 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2361 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2361 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2361 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2361 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:06 GMT[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2362 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2362 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2363 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2363 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2363 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2363 [main] DEBUG httpclient.wire.content  - << "3"
2363 [main] DEBUG httpclient.wire.content  - << "5"
2363 [main] DEBUG httpclient.wire.content  - << "[\r]"
2363 [main] DEBUG httpclient.wire.content  - << "[\n]"
2363 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2363 [main] DEBUG httpclient.wire.content  - << "[\r]"
2363 [main] DEBUG httpclient.wire.content  - << "[\n]"
2363 [main] DEBUG httpclient.wire.content  - << "0"
2363 [main] DEBUG httpclient.wire.content  - << "[\r]"
2363 [main] DEBUG httpclient.wire.content  - << "[\n]"
2363 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2363 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2363 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2363 [main] DEBUG httpclient.wire.content  - << "[\r]"
2363 [main] DEBUG httpclient.wire.content  - << "[\n]"
2363 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2364 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2364 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2364 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2364 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2364 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2364 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2364 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2366 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2366 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2366 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2367 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2367 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2367 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2367 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2367 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2367 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2367 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2368 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2368 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2368 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2368 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2368 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2368 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2368 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2369 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2369 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2369 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2369 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2369 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2370 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2370 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2370 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2370 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2375 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2375 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2375 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2375 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2375 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2375 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2375 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2375 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2375 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2376 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2376 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2376 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2376 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2376 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2376 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2376 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2377 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:06 GMT[\r][\n]"
2377 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2377 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2377 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2377 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2377 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2377 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2377 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2377 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2377 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2377 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2378 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2378 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2378 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2378 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2378 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2378 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2378 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2378 [main] DEBUG httpclient.wire.content  - << "3"
2378 [main] DEBUG httpclient.wire.content  - << "d"
2378 [main] DEBUG httpclient.wire.content  - << "[\r]"
2378 [main] DEBUG httpclient.wire.content  - << "[\n]"
2378 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2378 [main] DEBUG httpclient.wire.content  - << "[\r]"
2378 [main] DEBUG httpclient.wire.content  - << "[\n]"
2379 [main] DEBUG httpclient.wire.content  - << "0"
2379 [main] DEBUG httpclient.wire.content  - << "[\r]"
2379 [main] DEBUG httpclient.wire.content  - << "[\n]"
2379 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2379 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2379 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2379 [main] DEBUG httpclient.wire.content  - << "[\r]"
2379 [main] DEBUG httpclient.wire.content  - << "[\n]"
2379 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2379 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2379 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2380 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2380 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2389 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2389 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2390 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2390 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2390 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2390 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2390 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2390 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2390 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2390 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2390 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2390 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2390 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2391 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2391 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2391 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2391 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2391 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2392 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2392 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2392 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2392 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2392 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2392 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2392 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2392 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2392 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2394 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2394 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2394 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2394 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2394 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2395 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2395 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2395 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2395 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2396 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2396 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2396 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2396 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2396 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2396 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2397 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2397 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2397 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2397 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2413 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2413 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2413 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2413 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2414 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2414 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:06 GMT[\r][\n]"
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2414 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2414 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2414 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2414 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2414 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2414 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2414 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2414 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2414 [main] DEBUG httpclient.wire.content  - << "6"
2414 [main] DEBUG httpclient.wire.content  - << "8"
2414 [main] DEBUG httpclient.wire.content  - << "[\r]"
2414 [main] DEBUG httpclient.wire.content  - << "[\n]"
2415 [main] DEBUG httpclient.wire.content  - << "{"object":"0e470975-9d85-4b91-aff3-200868f22bca","message":"user successfully registered","status":"OK"}"
2415 [main] DEBUG httpclient.wire.content  - << "[\r]"
2415 [main] DEBUG httpclient.wire.content  - << "[\n]"
2415 [main] DEBUG httpclient.wire.content  - << "0"
2415 [main] DEBUG httpclient.wire.content  - << "[\r]"
2415 [main] DEBUG httpclient.wire.content  - << "[\n]"
2415 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2415 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2415 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2415 [main] DEBUG httpclient.wire.content  - << "[\r]"
2415 [main] DEBUG httpclient.wire.content  - << "[\n]"
2415 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2415 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2415 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2415 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2415 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"0e470975-9d85-4b91-aff3-200868f22bca","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@2929e5e9
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
28   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
71   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
89   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
93   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
93   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2077 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2077 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2079 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2079 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2079 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2079 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2079 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2079 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2079 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2080 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2080 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:38 GMT[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2080 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2080 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2081 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2081 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2082 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2083 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2083 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2083 [main] DEBUG httpclient.wire.content  - << "1"
2083 [main] DEBUG httpclient.wire.content  - << "f"
2084 [main] DEBUG httpclient.wire.content  - << "6"
2084 [main] DEBUG httpclient.wire.content  - << "9"
2084 [main] DEBUG httpclient.wire.content  - << "[\r]"
2084 [main] DEBUG httpclient.wire.content  - << "[\n]"
2085 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:38.334+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2086 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:38.416+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:25:38.417+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2086 [main] DEBUG httpclient.wire.content  - << "[\r]"
2086 [main] DEBUG httpclient.wire.content  - << "[\n]"
2086 [main] DEBUG httpclient.wire.content  - << "0"
2086 [main] DEBUG httpclient.wire.content  - << "[\r]"
2086 [main] DEBUG httpclient.wire.content  - << "[\n]"
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2086 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2086 [main] DEBUG httpclient.wire.content  - << "[\r]"
2087 [main] DEBUG httpclient.wire.content  - << "[\n]"
2087 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2087 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2087 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2087 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2087 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2087 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2087 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:38.334+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:38.416+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:25:38.417+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2091 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2092 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2092 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2092 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2092 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2093 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2093 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2093 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2093 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2093 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2094 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2094 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2095 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2107 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2107 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2107 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2107 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2107 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2107 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2107 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2108 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2108 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2108 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2108 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2108 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:38 GMT[\r][\n]"
2108 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2108 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2108 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2108 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2108 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2108 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2108 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2108 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2108 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2109 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2109 [main] DEBUG httpclient.wire.content  - << "3"
2109 [main] DEBUG httpclient.wire.content  - << "5"
2109 [main] DEBUG httpclient.wire.content  - << "[\r]"
2109 [main] DEBUG httpclient.wire.content  - << "[\n]"
2109 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2109 [main] DEBUG httpclient.wire.content  - << "[\r]"
2109 [main] DEBUG httpclient.wire.content  - << "[\n]"
2109 [main] DEBUG httpclient.wire.content  - << "0"
2109 [main] DEBUG httpclient.wire.content  - << "[\r]"
2109 [main] DEBUG httpclient.wire.content  - << "[\n]"
2109 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2109 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2109 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2109 [main] DEBUG httpclient.wire.content  - << "[\r]"
2109 [main] DEBUG httpclient.wire.content  - << "[\n]"
2109 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2109 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2109 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2109 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2109 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2109 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2110 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2110 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2112 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2112 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2112 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2112 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2112 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2112 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2113 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2113 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2113 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2113 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2113 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2113 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2113 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2113 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2113 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2114 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2114 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2114 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2114 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2114 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2114 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2114 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2114 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2114 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2114 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2114 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2114 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2115 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2115 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2115 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2115 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2115 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2115 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2118 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2118 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2118 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2118 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2118 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2118 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2119 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2119 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2119 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:38 GMT[\r][\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2120 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2120 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2120 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2120 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2120 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2120 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2120 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2120 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2120 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2120 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2120 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2121 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2121 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2121 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2121 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2121 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2121 [main] DEBUG httpclient.wire.content  - << "3"
2121 [main] DEBUG httpclient.wire.content  - << "d"
2121 [main] DEBUG httpclient.wire.content  - << "[\r]"
2121 [main] DEBUG httpclient.wire.content  - << "[\n]"
2121 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2121 [main] DEBUG httpclient.wire.content  - << "[\r]"
2121 [main] DEBUG httpclient.wire.content  - << "[\n]"
2121 [main] DEBUG httpclient.wire.content  - << "0"
2122 [main] DEBUG httpclient.wire.content  - << "[\r]"
2122 [main] DEBUG httpclient.wire.content  - << "[\n]"
2122 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2122 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2122 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2122 [main] DEBUG httpclient.wire.content  - << "[\r]"
2122 [main] DEBUG httpclient.wire.content  - << "[\n]"
2122 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2122 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2122 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2122 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2122 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2122 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2123 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2123 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2132 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2132 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2133 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2133 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2133 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2133 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2133 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2133 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2133 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2133 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2133 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2133 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2133 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2134 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2135 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2135 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2135 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2135 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2135 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2136 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2136 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2136 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2136 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2136 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2137 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2139 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2139 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2139 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2139 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2139 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2139 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2139 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2140 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2140 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2140 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2140 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2140 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2141 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2141 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2141 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2141 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2141 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2141 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2141 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2141 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2141 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2141 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2141 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2141 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2142 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2142 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2142 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2142 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2142 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2142 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2154 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2155 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2155 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2155 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2155 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2155 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2155 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2155 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:38 GMT[\r][\n]"
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2155 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2156 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2156 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2156 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2156 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2156 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2156 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2156 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2156 [main] DEBUG httpclient.wire.content  - << "6"
2156 [main] DEBUG httpclient.wire.content  - << "8"
2156 [main] DEBUG httpclient.wire.content  - << "[\r]"
2156 [main] DEBUG httpclient.wire.content  - << "[\n]"
2156 [main] DEBUG httpclient.wire.content  - << "{"object":"ca3d56a5-a6e9-4323-bcf8-0ebe6b679d60","message":"user successfully registered","status":"OK"}"
2156 [main] DEBUG httpclient.wire.content  - << "[\r]"
2156 [main] DEBUG httpclient.wire.content  - << "[\n]"
2157 [main] DEBUG httpclient.wire.content  - << "0"
2157 [main] DEBUG httpclient.wire.content  - << "[\r]"
2157 [main] DEBUG httpclient.wire.content  - << "[\n]"
2157 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2157 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2157 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2157 [main] DEBUG httpclient.wire.content  - << "[\r]"
2157 [main] DEBUG httpclient.wire.content  - << "[\n]"
2157 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2157 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2157 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2157 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2157 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2157 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"ca3d56a5-a6e9-4323-bcf8-0ebe6b679d60","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@79024994
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
56   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
66   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
69   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
69   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
83   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
84   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
84   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
84   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
84   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
84   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
84   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
87   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2006 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2006 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2008 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2008 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2008 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2008 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2008 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2008 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2008 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2008 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2009 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2009 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2009 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:55 GMT[\r][\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2009 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2010 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2010 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2011 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2011 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2012 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2013 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2013 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2013 [main] DEBUG httpclient.wire.content  - << "1"
2013 [main] DEBUG httpclient.wire.content  - << "f"
2013 [main] DEBUG httpclient.wire.content  - << "6"
2013 [main] DEBUG httpclient.wire.content  - << "9"
2013 [main] DEBUG httpclient.wire.content  - << "[\r]"
2013 [main] DEBUG httpclient.wire.content  - << "[\n]"
2014 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:54.709+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2015 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:54.774+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:25:54.774+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2015 [main] DEBUG httpclient.wire.content  - << "[\r]"
2015 [main] DEBUG httpclient.wire.content  - << "[\n]"
2015 [main] DEBUG httpclient.wire.content  - << "0"
2015 [main] DEBUG httpclient.wire.content  - << "[\r]"
2015 [main] DEBUG httpclient.wire.content  - << "[\n]"
2015 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2016 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2016 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2016 [main] DEBUG httpclient.wire.content  - << "[\r]"
2016 [main] DEBUG httpclient.wire.content  - << "[\n]"
2016 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2016 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2016 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:54.709+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:25:54.774+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:25:54.774+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2021 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2021 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2021 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2022 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2022 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2022 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2023 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2023 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2023 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2023 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2023 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2024 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2024 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2024 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2024 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2024 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2025 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2025 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2025 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2037 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2037 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2037 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2037 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2037 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2037 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2038 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2038 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2038 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:55 GMT[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2038 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2038 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2038 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2038 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2038 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2038 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2038 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2038 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2038 [main] DEBUG httpclient.wire.content  - << "3"
2039 [main] DEBUG httpclient.wire.content  - << "5"
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG httpclient.wire.content  - << "0"
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2039 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2039 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2039 [main] DEBUG httpclient.wire.content  - << "[\r]"
2039 [main] DEBUG httpclient.wire.content  - << "[\n]"
2039 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2039 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2039 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2040 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2040 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2040 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2040 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2042 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2042 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2042 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2043 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2044 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2044 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2044 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2044 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2044 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2045 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2048 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2048 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2048 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2048 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2049 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2049 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:55 GMT[\r][\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2049 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2049 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2049 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2049 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2050 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2050 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2050 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2050 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2050 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2050 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2050 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2050 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2050 [main] DEBUG httpclient.wire.content  - << "3"
2050 [main] DEBUG httpclient.wire.content  - << "d"
2050 [main] DEBUG httpclient.wire.content  - << "[\r]"
2050 [main] DEBUG httpclient.wire.content  - << "[\n]"
2050 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2051 [main] DEBUG httpclient.wire.content  - << "[\r]"
2051 [main] DEBUG httpclient.wire.content  - << "[\n]"
2051 [main] DEBUG httpclient.wire.content  - << "0"
2051 [main] DEBUG httpclient.wire.content  - << "[\r]"
2051 [main] DEBUG httpclient.wire.content  - << "[\n]"
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2051 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2051 [main] DEBUG httpclient.wire.content  - << "[\r]"
2051 [main] DEBUG httpclient.wire.content  - << "[\n]"
2051 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2051 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2051 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2052 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2052 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2052 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2052 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2062 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2062 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2062 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2062 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2063 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2063 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2063 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2063 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2063 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2063 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2064 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2065 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2065 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2065 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2065 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2065 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2065 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2066 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2066 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2066 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2066 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2066 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2066 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2066 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2068 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2068 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2068 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2068 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2068 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2068 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2069 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2069 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2069 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2069 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2070 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2070 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2070 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2070 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2070 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2071 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2071 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2071 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2071 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2071 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2093 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2093 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2093 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2093 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2093 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:25:55 GMT[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2094 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2094 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2094 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2094 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2094 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2095 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2095 [main] DEBUG httpclient.wire.content  - << "6"
2095 [main] DEBUG httpclient.wire.content  - << "8"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.content  - << "{"object":"833c4bcc-4ef4-4bc1-857d-c5fe4c6abf46","message":"user successfully registered","status":"OK"}"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.content  - << "0"
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2095 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2095 [main] DEBUG httpclient.wire.content  - << "[\r]"
2095 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2095 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2096 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2096 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2096 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2096 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2096 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"833c4bcc-4ef4-4bc1-857d-c5fe4c6abf46","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@38bdc9b3
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
88   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
88   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
89   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
89   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
93   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
93   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2000 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2000 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2002 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2002 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2002 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2002 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2002 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2002 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2002 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2002 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2002 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2003 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2003 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2003 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2003 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2003 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2003 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:26:15 GMT[\r][\n]"
2003 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2003 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2003 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2003 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2003 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2003 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2003 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2003 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2003 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2004 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2004 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2005 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2006 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2006 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2006 [main] DEBUG httpclient.wire.content  - << "1"
2006 [main] DEBUG httpclient.wire.content  - << "f"
2006 [main] DEBUG httpclient.wire.content  - << "6"
2006 [main] DEBUG httpclient.wire.content  - << "9"
2007 [main] DEBUG httpclient.wire.content  - << "[\r]"
2007 [main] DEBUG httpclient.wire.content  - << "[\n]"
2008 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:26:14.897+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2008 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:26:14.962+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:26:14.962+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2009 [main] DEBUG httpclient.wire.content  - << "[\r]"
2009 [main] DEBUG httpclient.wire.content  - << "[\n]"
2009 [main] DEBUG httpclient.wire.content  - << "0"
2009 [main] DEBUG httpclient.wire.content  - << "[\r]"
2009 [main] DEBUG httpclient.wire.content  - << "[\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2009 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2009 [main] DEBUG httpclient.wire.content  - << "[\r]"
2009 [main] DEBUG httpclient.wire.content  - << "[\n]"
2009 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2009 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2009 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2009 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2009 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2010 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:26:14.897+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:26:14.962+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:26:14.962+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2014 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2014 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2014 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2015 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2015 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2015 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2015 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2015 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2015 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2015 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2015 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2016 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2016 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2016 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2016 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2016 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2017 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2017 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2017 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2017 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2017 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2018 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2018 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2027 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2027 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2027 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2027 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2028 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2028 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2028 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2028 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:26:15 GMT[\r][\n]"
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2028 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2028 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2028 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2028 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2028 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2029 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2029 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2029 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2029 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2029 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2029 [main] DEBUG httpclient.wire.content  - << "3"
2029 [main] DEBUG httpclient.wire.content  - << "5"
2029 [main] DEBUG httpclient.wire.content  - << "[\r]"
2029 [main] DEBUG httpclient.wire.content  - << "[\n]"
2029 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2029 [main] DEBUG httpclient.wire.content  - << "[\r]"
2029 [main] DEBUG httpclient.wire.content  - << "[\n]"
2029 [main] DEBUG httpclient.wire.content  - << "0"
2029 [main] DEBUG httpclient.wire.content  - << "[\r]"
2029 [main] DEBUG httpclient.wire.content  - << "[\n]"
2029 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2030 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2030 [main] DEBUG httpclient.wire.content  - << "[\r]"
2030 [main] DEBUG httpclient.wire.content  - << "[\n]"
2030 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2030 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2030 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2030 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2030 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2032 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2033 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2033 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2033 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2033 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2033 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2033 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2033 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2034 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2034 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2034 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2034 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2034 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2034 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2035 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2035 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2035 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2035 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2035 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2035 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2036 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2036 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2036 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2036 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2036 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2041 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2041 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2041 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2041 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2041 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2041 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2041 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2042 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2042 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2042 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2042 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:26:15 GMT[\r][\n]"
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2042 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2042 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2043 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2043 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2043 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2043 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2044 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2044 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2044 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2044 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2044 [main] DEBUG httpclient.wire.content  - << "3"
2044 [main] DEBUG httpclient.wire.content  - << "d"
2044 [main] DEBUG httpclient.wire.content  - << "[\r]"
2044 [main] DEBUG httpclient.wire.content  - << "[\n]"
2044 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2044 [main] DEBUG httpclient.wire.content  - << "[\r]"
2044 [main] DEBUG httpclient.wire.content  - << "[\n]"
2044 [main] DEBUG httpclient.wire.content  - << "0"
2044 [main] DEBUG httpclient.wire.content  - << "[\r]"
2045 [main] DEBUG httpclient.wire.content  - << "[\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2045 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2045 [main] DEBUG httpclient.wire.content  - << "[\r]"
2045 [main] DEBUG httpclient.wire.content  - << "[\n]"
2045 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2045 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2045 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2045 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2045 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2054 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2054 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2055 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2055 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2055 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2055 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2055 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2055 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2055 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2055 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2055 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2055 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2055 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2056 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2056 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2056 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2056 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2056 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2057 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2057 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2057 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2058 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2058 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2058 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2058 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2060 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2060 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2060 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2060 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2060 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2061 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2061 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2061 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2061 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2061 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2062 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2062 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2062 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2063 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2063 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2063 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2063 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2063 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2063 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2063 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2063 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2063 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2064 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2064 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2064 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2077 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2077 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2077 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2077 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2077 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2078 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2078 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2078 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2078 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:26:15 GMT[\r][\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2078 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2078 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2078 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2079 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2079 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2079 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2079 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2079 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2079 [main] DEBUG httpclient.wire.content  - << "6"
2079 [main] DEBUG httpclient.wire.content  - << "8"
2079 [main] DEBUG httpclient.wire.content  - << "[\r]"
2079 [main] DEBUG httpclient.wire.content  - << "[\n]"
2080 [main] DEBUG httpclient.wire.content  - << "{"object":"397a4caf-592a-4a9a-83fa-c9ff1d5ad625","message":"user successfully registered","status":"OK"}"
2080 [main] DEBUG httpclient.wire.content  - << "[\r]"
2080 [main] DEBUG httpclient.wire.content  - << "[\n]"
2080 [main] DEBUG httpclient.wire.content  - << "0"
2080 [main] DEBUG httpclient.wire.content  - << "[\r]"
2080 [main] DEBUG httpclient.wire.content  - << "[\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2080 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2080 [main] DEBUG httpclient.wire.content  - << "[\r]"
2080 [main] DEBUG httpclient.wire.content  - << "[\n]"
2080 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2080 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2081 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2081 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2081 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2081 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2081 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2081 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"397a4caf-592a-4a9a-83fa-c9ff1d5ad625","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@46e06703
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
29   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
31   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
36   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
37   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
37   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
71   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
72   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
88   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
89   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
89   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
89   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
92   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
92   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2359 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2359 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2361 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2361 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2361 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2361 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2361 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:27:28 GMT[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2362 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2362 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2362 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2363 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2364 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2364 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2366 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2367 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2367 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2368 [main] DEBUG httpclient.wire.content  - << "1"
2368 [main] DEBUG httpclient.wire.content  - << "f"
2368 [main] DEBUG httpclient.wire.content  - << "6"
2368 [main] DEBUG httpclient.wire.content  - << "9"
2368 [main] DEBUG httpclient.wire.content  - << "[\r]"
2368 [main] DEBUG httpclient.wire.content  - << "[\n]"
2369 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:27:27.663+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2370 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:27:28.088+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:27:28.088+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2370 [main] DEBUG httpclient.wire.content  - << "[\r]"
2370 [main] DEBUG httpclient.wire.content  - << "[\n]"
2370 [main] DEBUG httpclient.wire.content  - << "0"
2371 [main] DEBUG httpclient.wire.content  - << "[\r]"
2371 [main] DEBUG httpclient.wire.content  - << "[\n]"
2371 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2371 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2371 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2371 [main] DEBUG httpclient.wire.content  - << "[\r]"
2371 [main] DEBUG httpclient.wire.content  - << "[\n]"
2371 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2371 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2371 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2371 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2371 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2371 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2371 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2371 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:27:27.663+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:27:28.088+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:27:28.088+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2378 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2378 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2378 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2378 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2378 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2378 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2379 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2379 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2379 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2379 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2379 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2380 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2380 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2380 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2380 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2380 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2380 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2380 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2380 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2380 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2381 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2381 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2381 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2381 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2381 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2381 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2381 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2391 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2391 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2392 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2392 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2392 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2392 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2392 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2392 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2393 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2393 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2393 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:27:28 GMT[\r][\n]"
2393 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2393 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2393 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2393 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2393 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2393 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2393 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2393 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2393 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2393 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2393 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2393 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2393 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2394 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2394 [main] DEBUG httpclient.wire.content  - << "3"
2394 [main] DEBUG httpclient.wire.content  - << "5"
2394 [main] DEBUG httpclient.wire.content  - << "[\r]"
2394 [main] DEBUG httpclient.wire.content  - << "[\n]"
2394 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2394 [main] DEBUG httpclient.wire.content  - << "[\r]"
2394 [main] DEBUG httpclient.wire.content  - << "[\n]"
2394 [main] DEBUG httpclient.wire.content  - << "0"
2394 [main] DEBUG httpclient.wire.content  - << "[\r]"
2394 [main] DEBUG httpclient.wire.content  - << "[\n]"
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2394 [main] DEBUG httpclient.wire.content  - << "[\r]"
2394 [main] DEBUG httpclient.wire.content  - << "[\n]"
2394 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2394 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2394 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2395 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2395 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2397 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2397 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2397 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2398 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2398 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2398 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2398 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2398 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2398 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2399 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2399 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2399 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2399 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2400 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2400 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2400 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2400 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2400 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2403 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2403 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2404 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2404 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2405 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2406 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2406 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2406 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:27:28 GMT[\r][\n]"
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2406 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2406 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2407 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2407 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2407 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2407 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2407 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2407 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2408 [main] DEBUG httpclient.wire.content  - << "3"
2408 [main] DEBUG httpclient.wire.content  - << "d"
2408 [main] DEBUG httpclient.wire.content  - << "[\r]"
2408 [main] DEBUG httpclient.wire.content  - << "[\n]"
2408 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2408 [main] DEBUG httpclient.wire.content  - << "[\r]"
2408 [main] DEBUG httpclient.wire.content  - << "[\n]"
2408 [main] DEBUG httpclient.wire.content  - << "0"
2408 [main] DEBUG httpclient.wire.content  - << "[\r]"
2408 [main] DEBUG httpclient.wire.content  - << "[\n]"
2408 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2408 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2408 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2408 [main] DEBUG httpclient.wire.content  - << "[\r]"
2409 [main] DEBUG httpclient.wire.content  - << "[\n]"
2409 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2409 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2409 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2409 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2419 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2420 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2420 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2420 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2420 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2420 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2420 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2420 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2420 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2420 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2420 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2420 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2420 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2425 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2425 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2425 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2425 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2425 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2425 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2426 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2426 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2426 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2426 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2426 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2426 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2426 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2426 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2428 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2428 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2429 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2429 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2429 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2429 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2431 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2431 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2431 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2431 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2458 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2458 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2458 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2458 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2458 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:27:28 GMT[\r][\n]"
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2459 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2459 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2460 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2460 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2460 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2460 [main] DEBUG httpclient.wire.content  - << "6"
2460 [main] DEBUG httpclient.wire.content  - << "8"
2460 [main] DEBUG httpclient.wire.content  - << "[\r]"
2460 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG httpclient.wire.content  - << "{"object":"6e8dc32f-04d7-42f4-b4c2-55d14ab683c9","message":"user successfully registered","status":"OK"}"
2461 [main] DEBUG httpclient.wire.content  - << "[\r]"
2461 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG httpclient.wire.content  - << "0"
2461 [main] DEBUG httpclient.wire.content  - << "[\r]"
2461 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2461 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2461 [main] DEBUG httpclient.wire.content  - << "[\r]"
2461 [main] DEBUG httpclient.wire.content  - << "[\n]"
2461 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2462 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2462 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2462 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2462 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2462 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"6e8dc32f-04d7-42f4-b4c2-55d14ab683c9","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@1638fff7
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
28   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
30   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
35   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
89   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
91   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2087 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2087 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2089 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2089 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2089 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2089 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2089 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:28:06 GMT[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2090 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2090 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2090 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2090 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2091 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2091 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2092 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2092 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2093 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2094 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2094 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2094 [main] DEBUG httpclient.wire.content  - << "1"
2094 [main] DEBUG httpclient.wire.content  - << "f"
2094 [main] DEBUG httpclient.wire.content  - << "6"
2094 [main] DEBUG httpclient.wire.content  - << "9"
2094 [main] DEBUG httpclient.wire.content  - << "[\r]"
2094 [main] DEBUG httpclient.wire.content  - << "[\n]"
2095 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:28:05.936+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2096 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:28:06.000+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:28:06.000+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2096 [main] DEBUG httpclient.wire.content  - << "[\r]"
2096 [main] DEBUG httpclient.wire.content  - << "[\n]"
2096 [main] DEBUG httpclient.wire.content  - << "0"
2097 [main] DEBUG httpclient.wire.content  - << "[\r]"
2097 [main] DEBUG httpclient.wire.content  - << "[\n]"
2097 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2097 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2097 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2097 [main] DEBUG httpclient.wire.content  - << "[\r]"
2097 [main] DEBUG httpclient.wire.content  - << "[\n]"
2097 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2097 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2097 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2097 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2097 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2097 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2097 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2098 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:28:05.936+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:28:06.000+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:28:06.000+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2102 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2102 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2102 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2102 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2102 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2103 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2103 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2103 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2103 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2103 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2103 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2103 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2103 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2104 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2104 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2104 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2104 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2104 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2105 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2105 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2105 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2105 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2116 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2116 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2116 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2116 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2116 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2116 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2116 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2116 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:28:06 GMT[\r][\n]"
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2117 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2117 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2118 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2118 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2118 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2118 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2118 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2118 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2118 [main] DEBUG httpclient.wire.content  - << "3"
2118 [main] DEBUG httpclient.wire.content  - << "5"
2118 [main] DEBUG httpclient.wire.content  - << "[\r]"
2118 [main] DEBUG httpclient.wire.content  - << "[\n]"
2118 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2118 [main] DEBUG httpclient.wire.content  - << "[\r]"
2118 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG httpclient.wire.content  - << "0"
2119 [main] DEBUG httpclient.wire.content  - << "[\r]"
2119 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2119 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2119 [main] DEBUG httpclient.wire.content  - << "[\r]"
2119 [main] DEBUG httpclient.wire.content  - << "[\n]"
2119 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2119 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2119 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2119 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2119 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2119 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2119 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2119 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2122 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2122 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2122 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2123 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2123 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2123 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2123 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2124 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2124 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2124 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2124 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2124 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2124 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2124 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2125 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2125 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2125 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2125 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2125 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2125 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2125 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2128 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2128 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2129 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2129 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2129 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2129 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2129 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2129 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2130 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:28:06 GMT[\r][\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2130 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2130 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2130 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2130 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2130 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2131 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2131 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2131 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2131 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2131 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2131 [main] DEBUG httpclient.wire.content  - << "3"
2131 [main] DEBUG httpclient.wire.content  - << "d"
2131 [main] DEBUG httpclient.wire.content  - << "[\r]"
2131 [main] DEBUG httpclient.wire.content  - << "[\n]"
2131 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2131 [main] DEBUG httpclient.wire.content  - << "[\r]"
2131 [main] DEBUG httpclient.wire.content  - << "[\n]"
2131 [main] DEBUG httpclient.wire.content  - << "0"
2132 [main] DEBUG httpclient.wire.content  - << "[\r]"
2132 [main] DEBUG httpclient.wire.content  - << "[\n]"
2132 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2132 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2132 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2132 [main] DEBUG httpclient.wire.content  - << "[\r]"
2132 [main] DEBUG httpclient.wire.content  - << "[\n]"
2132 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2132 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2132 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2132 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2132 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2132 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2133 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2133 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2143 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2143 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2143 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2143 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2143 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2143 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2143 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2143 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2143 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2143 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2143 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2144 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2144 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2144 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2144 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2144 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2144 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2144 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2145 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2145 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2145 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2145 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2145 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2145 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2145 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2146 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2146 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2146 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2146 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2146 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2146 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2146 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2148 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2148 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2148 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2148 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2148 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2148 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2148 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2149 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2149 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2149 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2149 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2150 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2150 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2150 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2150 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2150 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2150 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2150 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2151 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2151 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2151 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2151 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2151 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2151 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2151 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2151 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2165 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2165 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2165 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2165 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2165 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2165 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2166 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2166 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2166 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2166 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:28:06 GMT[\r][\n]"
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2166 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2166 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2166 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2166 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2166 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2166 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2167 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2167 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2167 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2167 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2167 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2167 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2167 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2167 [main] DEBUG httpclient.wire.content  - << "6"
2167 [main] DEBUG httpclient.wire.content  - << "8"
2167 [main] DEBUG httpclient.wire.content  - << "[\r]"
2167 [main] DEBUG httpclient.wire.content  - << "[\n]"
2167 [main] DEBUG httpclient.wire.content  - << "{"object":"ac9a3485-6c88-4501-860d-a2b247cb37f4","message":"user successfully registered","status":"OK"}"
2167 [main] DEBUG httpclient.wire.content  - << "[\r]"
2167 [main] DEBUG httpclient.wire.content  - << "[\n]"
2167 [main] DEBUG httpclient.wire.content  - << "0"
2167 [main] DEBUG httpclient.wire.content  - << "[\r]"
2167 [main] DEBUG httpclient.wire.content  - << "[\n]"
2167 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2167 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2167 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2167 [main] DEBUG httpclient.wire.content  - << "[\r]"
2168 [main] DEBUG httpclient.wire.content  - << "[\n]"
2168 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2168 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2168 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2168 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2168 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2168 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2168 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2168 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"ac9a3485-6c88-4501-860d-a2b247cb37f4","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@28f19d6e
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
27   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
34   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
87   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
87   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
87   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
87   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
87   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
88   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
91   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2567 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2567 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2569 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2569 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2569 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2570 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2570 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2570 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2570 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:29:45 GMT[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2570 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2570 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2570 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2571 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2571 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2571 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2571 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2571 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2572 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2572 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2573 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2574 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2574 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2574 [main] DEBUG httpclient.wire.content  - << "1"
2574 [main] DEBUG httpclient.wire.content  - << "f"
2574 [main] DEBUG httpclient.wire.content  - << "6"
2574 [main] DEBUG httpclient.wire.content  - << "9"
2574 [main] DEBUG httpclient.wire.content  - << "[\r]"
2574 [main] DEBUG httpclient.wire.content  - << "[\n]"
2575 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:29:44.376+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2576 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:29:44.816+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:29:44.816+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2576 [main] DEBUG httpclient.wire.content  - << "[\r]"
2576 [main] DEBUG httpclient.wire.content  - << "[\n]"
2576 [main] DEBUG httpclient.wire.content  - << "0"
2577 [main] DEBUG httpclient.wire.content  - << "[\r]"
2577 [main] DEBUG httpclient.wire.content  - << "[\n]"
2577 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2577 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2577 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2577 [main] DEBUG httpclient.wire.content  - << "[\r]"
2577 [main] DEBUG httpclient.wire.content  - << "[\n]"
2577 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2577 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2577 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2577 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2577 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2577 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2578 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2578 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:29:44.376+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:29:44.816+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:29:44.816+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2582 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2582 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2582 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2582 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2583 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2583 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2583 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2583 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2583 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2583 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2583 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2583 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2584 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2584 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2584 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2584 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2584 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2584 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2584 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2584 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2585 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2585 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2585 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2585 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2585 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2585 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2586 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2598 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2598 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2598 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2598 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2598 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2598 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2599 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2599 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2599 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2599 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2599 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2599 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2599 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:29:45 GMT[\r][\n]"
2599 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2599 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2599 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2599 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2599 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2599 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2599 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2599 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2599 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2599 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2599 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2599 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2599 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2599 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2599 [main] DEBUG httpclient.wire.content  - << "3"
2600 [main] DEBUG httpclient.wire.content  - << "5"
2600 [main] DEBUG httpclient.wire.content  - << "[\r]"
2600 [main] DEBUG httpclient.wire.content  - << "[\n]"
2600 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2600 [main] DEBUG httpclient.wire.content  - << "[\r]"
2600 [main] DEBUG httpclient.wire.content  - << "[\n]"
2600 [main] DEBUG httpclient.wire.content  - << "0"
2600 [main] DEBUG httpclient.wire.content  - << "[\r]"
2600 [main] DEBUG httpclient.wire.content  - << "[\n]"
2600 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2600 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2600 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2600 [main] DEBUG httpclient.wire.content  - << "[\r]"
2600 [main] DEBUG httpclient.wire.content  - << "[\n]"
2600 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2600 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2600 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2600 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2600 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2600 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2600 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2601 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2602 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2603 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2603 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2603 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2603 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2603 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2603 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2603 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2604 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2604 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2604 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2604 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2604 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2604 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2604 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2604 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2604 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2604 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2605 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2605 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2605 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2605 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2605 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2605 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2605 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2609 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2609 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2609 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2609 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2609 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2609 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2609 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2609 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2610 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2610 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2610 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2610 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2610 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2610 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2610 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2611 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2611 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:29:45 GMT[\r][\n]"
2611 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2611 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2611 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2611 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2611 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2611 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2611 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2611 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2611 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2611 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2612 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2612 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2612 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2612 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2612 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2612 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2612 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2612 [main] DEBUG httpclient.wire.content  - << "3"
2612 [main] DEBUG httpclient.wire.content  - << "d"
2612 [main] DEBUG httpclient.wire.content  - << "[\r]"
2612 [main] DEBUG httpclient.wire.content  - << "[\n]"
2612 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2612 [main] DEBUG httpclient.wire.content  - << "[\r]"
2612 [main] DEBUG httpclient.wire.content  - << "[\n]"
2613 [main] DEBUG httpclient.wire.content  - << "0"
2613 [main] DEBUG httpclient.wire.content  - << "[\r]"
2613 [main] DEBUG httpclient.wire.content  - << "[\n]"
2613 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2613 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2613 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2613 [main] DEBUG httpclient.wire.content  - << "[\r]"
2613 [main] DEBUG httpclient.wire.content  - << "[\n]"
2613 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2613 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2613 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2613 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2614 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2614 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2614 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2614 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2623 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2623 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2624 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2624 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2624 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2624 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2624 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2624 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2624 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2624 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2624 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2624 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2624 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2625 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2625 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2625 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2625 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2625 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2625 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2626 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2626 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2626 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2626 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2626 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2627 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2627 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2627 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2627 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2627 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2629 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2630 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2630 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2630 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2630 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2630 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2630 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2630 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2630 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2630 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2630 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2630 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2631 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2631 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2631 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2631 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2631 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2632 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2632 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2632 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2632 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2632 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2632 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2632 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2632 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2632 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2632 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2632 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2633 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2658 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2659 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2659 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2659 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2659 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2659 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2659 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2659 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:29:45 GMT[\r][\n]"
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2659 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2659 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2659 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2659 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2660 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2660 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2660 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2660 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2660 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2660 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2660 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2660 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2660 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2660 [main] DEBUG httpclient.wire.content  - << "6"
2660 [main] DEBUG httpclient.wire.content  - << "8"
2660 [main] DEBUG httpclient.wire.content  - << "[\r]"
2660 [main] DEBUG httpclient.wire.content  - << "[\n]"
2660 [main] DEBUG httpclient.wire.content  - << "{"object":"d7c1f404-354d-479b-abf3-f0c4245b9567","message":"user successfully registered","status":"OK"}"
2660 [main] DEBUG httpclient.wire.content  - << "[\r]"
2660 [main] DEBUG httpclient.wire.content  - << "[\n]"
2660 [main] DEBUG httpclient.wire.content  - << "0"
2660 [main] DEBUG httpclient.wire.content  - << "[\r]"
2660 [main] DEBUG httpclient.wire.content  - << "[\n]"
2660 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2660 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2660 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2660 [main] DEBUG httpclient.wire.content  - << "[\r]"
2661 [main] DEBUG httpclient.wire.content  - << "[\n]"
2661 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2661 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2661 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2661 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2661 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2661 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2661 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2661 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"d7c1f404-354d-479b-abf3-f0c4245b9567","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@109b2a51
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
51   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
55   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
68   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
68   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
85   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
85   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
85   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
86   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
89   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
89   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2391 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2392 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2393 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2393 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2393 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2394 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2394 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2394 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2394 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:31:20 GMT[\r][\n]"
2394 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2395 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2395 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2395 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2396 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2396 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2398 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2398 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2398 [main] DEBUG httpclient.wire.content  - << "1"
2399 [main] DEBUG httpclient.wire.content  - << "f"
2399 [main] DEBUG httpclient.wire.content  - << "6"
2399 [main] DEBUG httpclient.wire.content  - << "9"
2399 [main] DEBUG httpclient.wire.content  - << "[\r]"
2399 [main] DEBUG httpclient.wire.content  - << "[\n]"
2400 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:31:20.089+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2401 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:31:20.537+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:31:20.537+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2401 [main] DEBUG httpclient.wire.content  - << "[\r]"
2401 [main] DEBUG httpclient.wire.content  - << "[\n]"
2401 [main] DEBUG httpclient.wire.content  - << "0"
2401 [main] DEBUG httpclient.wire.content  - << "[\r]"
2401 [main] DEBUG httpclient.wire.content  - << "[\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2401 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2401 [main] DEBUG httpclient.wire.content  - << "[\r]"
2401 [main] DEBUG httpclient.wire.content  - << "[\n]"
2401 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2401 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2401 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2401 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2401 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2402 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2402 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:31:20.089+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:31:20.537+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:31:20.537+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2406 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2406 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2406 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2406 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2406 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2407 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2407 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2407 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2407 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2408 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2408 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2408 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2408 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2408 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2408 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2409 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2409 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2409 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2422 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2422 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2422 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2422 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2422 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2422 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2422 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2422 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2423 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:31:20 GMT[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2423 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2423 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2423 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2423 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2423 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2423 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2423 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2423 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2423 [main] DEBUG httpclient.wire.content  - << "3"
2423 [main] DEBUG httpclient.wire.content  - << "5"
2423 [main] DEBUG httpclient.wire.content  - << "[\r]"
2423 [main] DEBUG httpclient.wire.content  - << "[\n]"
2424 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2424 [main] DEBUG httpclient.wire.content  - << "[\r]"
2424 [main] DEBUG httpclient.wire.content  - << "[\n]"
2424 [main] DEBUG httpclient.wire.content  - << "0"
2424 [main] DEBUG httpclient.wire.content  - << "[\r]"
2424 [main] DEBUG httpclient.wire.content  - << "[\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2424 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2424 [main] DEBUG httpclient.wire.content  - << "[\r]"
2424 [main] DEBUG httpclient.wire.content  - << "[\n]"
2424 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2424 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2424 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2424 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2424 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2424 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2424 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2427 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2427 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2427 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2427 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2427 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2428 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2428 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2428 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2428 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2428 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2428 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2429 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2429 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2429 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2429 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2429 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2430 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2430 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2430 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2434 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2434 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2434 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2434 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2434 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2434 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2434 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2434 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2434 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2435 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2435 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:31:20 GMT[\r][\n]"
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2435 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2436 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2436 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2436 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2436 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2436 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2436 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2437 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2437 [main] DEBUG httpclient.wire.content  - << "3"
2437 [main] DEBUG httpclient.wire.content  - << "d"
2437 [main] DEBUG httpclient.wire.content  - << "[\r]"
2437 [main] DEBUG httpclient.wire.content  - << "[\n]"
2437 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2437 [main] DEBUG httpclient.wire.content  - << "[\r]"
2437 [main] DEBUG httpclient.wire.content  - << "[\n]"
2437 [main] DEBUG httpclient.wire.content  - << "0"
2437 [main] DEBUG httpclient.wire.content  - << "[\r]"
2437 [main] DEBUG httpclient.wire.content  - << "[\n]"
2437 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2437 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2438 [main] DEBUG httpclient.wire.content  - << "[\r]"
2438 [main] DEBUG httpclient.wire.content  - << "[\n]"
2438 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2438 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2438 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2448 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2448 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2448 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2448 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2448 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2448 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2448 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2449 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2449 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2449 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2449 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2449 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2449 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2449 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2450 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2450 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2450 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2450 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2450 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2451 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2451 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2451 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2451 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2451 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2451 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2451 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2451 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2451 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2451 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2453 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2454 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2454 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2454 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2454 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2454 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2454 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2454 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2455 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2455 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2455 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2455 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2456 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2456 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2456 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2456 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2456 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2456 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2456 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2456 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2456 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2456 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2457 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2457 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2457 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2457 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2490 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2491 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2491 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2491 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2491 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2491 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2491 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2491 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:31:20 GMT[\r][\n]"
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2491 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2491 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2491 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2492 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2492 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2492 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2492 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2492 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2492 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2492 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2492 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2492 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2492 [main] DEBUG httpclient.wire.content  - << "6"
2492 [main] DEBUG httpclient.wire.content  - << "8"
2492 [main] DEBUG httpclient.wire.content  - << "[\r]"
2492 [main] DEBUG httpclient.wire.content  - << "[\n]"
2492 [main] DEBUG httpclient.wire.content  - << "{"object":"2550a927-12ef-48c1-b10a-2a10e1d7d545","message":"user successfully registered","status":"OK"}"
2492 [main] DEBUG httpclient.wire.content  - << "[\r]"
2492 [main] DEBUG httpclient.wire.content  - << "[\n]"
2492 [main] DEBUG httpclient.wire.content  - << "0"
2492 [main] DEBUG httpclient.wire.content  - << "[\r]"
2492 [main] DEBUG httpclient.wire.content  - << "[\n]"
2492 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2492 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2493 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2493 [main] DEBUG httpclient.wire.content  - << "[\r]"
2493 [main] DEBUG httpclient.wire.content  - << "[\n]"
2493 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2493 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2493 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2493 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2493 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2493 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"2550a927-12ef-48c1-b10a-2a10e1d7d545","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@31a3ca10
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
28   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
33   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
67   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
69   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
70   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
71   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
84   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
85   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
85   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
85   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
85   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
85   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
85   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
86   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
88   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2399 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2399 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2401 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2401 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2402 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2402 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2402 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2402 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2402 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2402 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2402 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2402 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2403 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2403 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:33:35 GMT[\r][\n]"
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2403 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2403 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2403 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2403 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2403 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2403 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2403 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2403 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2404 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2404 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2405 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2406 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2406 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2407 [main] DEBUG httpclient.wire.content  - << "1"
2407 [main] DEBUG httpclient.wire.content  - << "f"
2407 [main] DEBUG httpclient.wire.content  - << "6"
2407 [main] DEBUG httpclient.wire.content  - << "9"
2407 [main] DEBUG httpclient.wire.content  - << "[\r]"
2407 [main] DEBUG httpclient.wire.content  - << "[\n]"
2408 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:33:35.257+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genr"
2409 [main] DEBUG httpclient.wire.content  - << "es/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:33:35.698+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:33:35.698+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}"
2409 [main] DEBUG httpclient.wire.content  - << "[\r]"
2409 [main] DEBUG httpclient.wire.content  - << "[\n]"
2409 [main] DEBUG httpclient.wire.content  - << "0"
2409 [main] DEBUG httpclient.wire.content  - << "[\r]"
2409 [main] DEBUG httpclient.wire.content  - << "[\n]"
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2409 [main] DEBUG httpclient.wire.content  - << "[\r]"
2409 [main] DEBUG httpclient.wire.content  - << "[\n]"
2410 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2410 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2410 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2410 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2410 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2410 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2410 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2410 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:33:35.257+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:33:35.698+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:33:35.698+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2415 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2415 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2415 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2415 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2415 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2416 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2416 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2416 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2416 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2416 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2417 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2417 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2417 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2417 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2417 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2417 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2418 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2418 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2418 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2418 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2429 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2430 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:33:35 GMT[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2431 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2431 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2431 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2431 [main] DEBUG httpclient.wire.content  - << "3"
2431 [main] DEBUG httpclient.wire.content  - << "5"
2431 [main] DEBUG httpclient.wire.content  - << "[\r]"
2431 [main] DEBUG httpclient.wire.content  - << "[\n]"
2431 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2431 [main] DEBUG httpclient.wire.content  - << "[\r]"
2431 [main] DEBUG httpclient.wire.content  - << "[\n]"
2431 [main] DEBUG httpclient.wire.content  - << "0"
2431 [main] DEBUG httpclient.wire.content  - << "[\r]"
2431 [main] DEBUG httpclient.wire.content  - << "[\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2432 [main] DEBUG httpclient.wire.content  - << "[\r]"
2432 [main] DEBUG httpclient.wire.content  - << "[\n]"
2432 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2432 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2432 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2432 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2434 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2434 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2434 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2434 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2434 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2435 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2435 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2435 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2435 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2435 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2435 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2435 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2435 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2436 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2436 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2436 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2436 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2437 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2437 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2437 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2441 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2443 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2443 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2444 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2445 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:33:35 GMT[\r][\n]"
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2445 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2445 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2446 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2446 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2446 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2446 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2446 [main] DEBUG httpclient.wire.content  - << "3"
2446 [main] DEBUG httpclient.wire.content  - << "d"
2446 [main] DEBUG httpclient.wire.content  - << "[\r]"
2446 [main] DEBUG httpclient.wire.content  - << "[\n]"
2446 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2446 [main] DEBUG httpclient.wire.content  - << "[\r]"
2446 [main] DEBUG httpclient.wire.content  - << "[\n]"
2446 [main] DEBUG httpclient.wire.content  - << "0"
2447 [main] DEBUG httpclient.wire.content  - << "[\r]"
2447 [main] DEBUG httpclient.wire.content  - << "[\n]"
2447 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2447 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2447 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2447 [main] DEBUG httpclient.wire.content  - << "[\r]"
2447 [main] DEBUG httpclient.wire.content  - << "[\n]"
2447 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2447 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2447 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2447 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2447 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2447 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2448 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2448 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2458 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2458 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2458 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2458 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2458 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2458 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2458 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2458 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2458 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2458 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2459 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2460 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2460 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2461 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2461 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2461 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2461 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2462 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2462 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2462 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2462 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2464 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2464 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2464 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2464 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2464 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2464 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2464 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2465 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2465 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2465 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2465 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2465 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2465 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2466 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2466 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2466 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2466 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2466 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2466 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2466 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2466 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2466 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2466 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2480 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2480 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2480 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2480 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2480 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2480 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2481 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2481 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2481 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2481 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:33:35 GMT[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2481 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2481 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2481 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2481 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2481 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2481 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2482 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2482 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2482 [main] DEBUG httpclient.wire.content  - << "6"
2482 [main] DEBUG httpclient.wire.content  - << "8"
2482 [main] DEBUG httpclient.wire.content  - << "[\r]"
2482 [main] DEBUG httpclient.wire.content  - << "[\n]"
2482 [main] DEBUG httpclient.wire.content  - << "{"object":"1e77221d-facf-44cb-af59-714970e0f10d","message":"user successfully registered","status":"OK"}"
2482 [main] DEBUG httpclient.wire.content  - << "[\r]"
2482 [main] DEBUG httpclient.wire.content  - << "[\n]"
2482 [main] DEBUG httpclient.wire.content  - << "0"
2482 [main] DEBUG httpclient.wire.content  - << "[\r]"
2482 [main] DEBUG httpclient.wire.content  - << "[\n]"
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2482 [main] DEBUG httpclient.wire.content  - << "[\r]"
2482 [main] DEBUG httpclient.wire.content  - << "[\n]"
2482 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2482 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2483 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2483 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2483 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2483 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"1e77221d-facf-44cb-af59-714970e0f10d","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@3a42f352
7    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
30   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
32   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
57   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
61   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
62   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
72   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
74   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
75   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
75   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
75   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
75   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
89   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
90   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
92   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
92   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2393 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2393 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2395 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2396 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2396 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2396 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2396 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2396 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2397 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2397 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:39:05 GMT[\r][\n]"
2397 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2397 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2397 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2397 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2397 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2398 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2398 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2399 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2400 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2400 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2400 [main] DEBUG httpclient.wire.content  - << "2"
2401 [main] DEBUG httpclient.wire.content  - << "0"
2401 [main] DEBUG httpclient.wire.content  - << "0"
2401 [main] DEBUG httpclient.wire.content  - << "0"
2401 [main] DEBUG httpclient.wire.content  - << "[\r]"
2401 [main] DEBUG httpclient.wire.content  - << "[\n]"
2402 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"@class":"tv.notube.commons.model.activity.Song","mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:05.218+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"@class":"tv.notube.commons.model.activity.bbc.BBCProgramme","picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/"
2403 [main] DEBUG httpclient.wire.content  - << "sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:05.662+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"@class":"tv.notube.commons.model.activity.Tweet","text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:39:05.662+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","stat"
2403 [main] DEBUG httpclient.wire.content  - << "[\r]"
2403 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG httpclient.wire.content  - << "9"
2403 [main] DEBUG httpclient.wire.content  - << "[\r]"
2403 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG httpclient.wire.content  - << "us":"OK"}"
2403 [main] DEBUG httpclient.wire.content  - << "[\r]"
2403 [main] DEBUG httpclient.wire.content  - << "[\n]"
2403 [main] DEBUG httpclient.wire.content  - << "0"
2404 [main] DEBUG httpclient.wire.content  - << "[\r]"
2404 [main] DEBUG httpclient.wire.content  - << "[\n]"
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2404 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2404 [main] DEBUG httpclient.wire.content  - << "[\r]"
2404 [main] DEBUG httpclient.wire.content  - << "[\n]"
2404 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2404 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2404 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2404 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2405 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2405 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"@class":"tv.notube.commons.model.activity.Song","mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:05.218+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"@class":"tv.notube.commons.model.activity.bbc.BBCProgramme","picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:05.662+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"@class":"tv.notube.commons.model.activity.Tweet","text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:39:05.662+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
2409 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2409 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2409 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2409 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2409 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2410 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2410 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2410 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2410 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2410 [main] DEBUG httpclient.wire.header  - >> "GET /user/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2410 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2410 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2410 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2411 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2411 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2411 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2411 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2411 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2411 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2412 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2412 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2412 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2412 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2412 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2412 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2412 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2412 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2412 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2430 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2430 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2430 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2430 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2431 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2431 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:39:05 GMT[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2431 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2431 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2431 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2431 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2431 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2431 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2432 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2432 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2432 [main] DEBUG httpclient.wire.content  - << "3"
2432 [main] DEBUG httpclient.wire.content  - << "5"
2432 [main] DEBUG httpclient.wire.content  - << "[\r]"
2432 [main] DEBUG httpclient.wire.content  - << "[\n]"
2432 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'ExistingUser' found","status":"OK"}"
2432 [main] DEBUG httpclient.wire.content  - << "[\r]"
2432 [main] DEBUG httpclient.wire.content  - << "[\n]"
2432 [main] DEBUG httpclient.wire.content  - << "0"
2432 [main] DEBUG httpclient.wire.content  - << "[\r]"
2432 [main] DEBUG httpclient.wire.content  - << "[\n]"
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2432 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2433 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2433 [main] DEBUG httpclient.wire.content  - << "[\r]"
2433 [main] DEBUG httpclient.wire.content  - << "[\n]"
2433 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2433 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2433 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2433 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2433 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'ExistingUser' found","status":"OK"}
2436 [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
2436 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2436 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2436 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2436 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2437 [main] DEBUG httpclient.wire.header  - >> "GET /user/NotExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2437 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2437 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2438 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2438 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2438 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2438 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2439 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2439 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2439 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2439 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2443 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2443 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 500 Internal Server Error[\r][\n]"
2443 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2443 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2443 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2443 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2443 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:39:05 GMT[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2444 [main] DEBUG httpclient.wire.header  - << "Connection: close[\r][\n]"
2444 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2445 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2445 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2445 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2445 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2445 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2445 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2445 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2445 [main] DEBUG httpclient.wire.content  - << "3"
2445 [main] DEBUG httpclient.wire.content  - << "d"
2445 [main] DEBUG httpclient.wire.content  - << "[\r]"
2445 [main] DEBUG httpclient.wire.content  - << "[\n]"
2445 [main] DEBUG httpclient.wire.content  - << "{"message":"user 'NotExistingUser' not found","status":"NOK"}"
2445 [main] DEBUG httpclient.wire.content  - << "[\r]"
2445 [main] DEBUG httpclient.wire.content  - << "[\n]"
2446 [main] DEBUG httpclient.wire.content  - << "0"
2446 [main] DEBUG httpclient.wire.content  - << "[\r]"
2446 [main] DEBUG httpclient.wire.content  - << "[\n]"
2446 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2446 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2446 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2446 [main] DEBUG httpclient.wire.content  - << "[\r]"
2446 [main] DEBUG httpclient.wire.content  - << "[\n]"
2446 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2446 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should close connection in response to directive: close
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.close()
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.closeSockedAndStreams()
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2446 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2447 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 500
2447 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"message":"user 'NotExistingUser' not found","status":"NOK"}
2456 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2456 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2456 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2456 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2456 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2456 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2457 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.addParameter(String, String)
2457 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.clearRequestBody()
2457 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
2457 [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
2457 [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
2457 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
2457 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
2458 [main] DEBUG httpclient.wire.header  - >> "POST /user/register?apikey=APIKEY HTTP/1.1[\r][\n]"
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2458 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2458 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
2458 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.methods.ExpectContinueMethod  - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
2459 [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
2459 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)
2459 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2459 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2460 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2460 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - HttpMethodBase.addRequestHeader(Header)
2462 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.getParameters()
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter getContentCharSet( Header contentheader )
2462 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2462 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2462 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.getParameterByName(String)
2462 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Default charset used: ISO-8859-1
2463 [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2463 [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2463 [main] DEBUG httpclient.wire.header  - >> "Content-Length: 68[\r][\n]"
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2463 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2464 [main] DEBUG httpclient.wire.header  - >> "Content-Type: application/x-www-form-urlencoded[\r][\n]"
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
2464 [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
2464 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)
2464 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2464 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - enter EntityEnclosingMethod.getRequestContentLength()
2464 [main] DEBUG org.apache.commons.httpclient.methods.PostMethod  - enter PostMethod.hasRequestContent()
2464 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getRequestOutputStream()
2465 [main] DEBUG httpclient.wire.content  - >> "name=Name&surname=Surname&username=NotExistingUser&password=p455W0rd"
2465 [main] DEBUG org.apache.commons.httpclient.methods.EntityEnclosingMethod  - Request body sent
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
2465 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2465 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2481 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2482 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2482 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2482 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2482 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2482 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2482 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2482 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2483 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:39:05 GMT[\r][\n]"
2483 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2483 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2483 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2483 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2483 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2483 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2483 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2483 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2483 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2483 [main] DEBUG httpclient.wire.content  - << "6"
2484 [main] DEBUG httpclient.wire.content  - << "8"
2484 [main] DEBUG httpclient.wire.content  - << "[\r]"
2484 [main] DEBUG httpclient.wire.content  - << "[\n]"
2484 [main] DEBUG httpclient.wire.content  - << "{"object":"c622245a-4566-4dfd-9d48-c0e17713c584","message":"user successfully registered","status":"OK"}"
2484 [main] DEBUG httpclient.wire.content  - << "[\r]"
2484 [main] DEBUG httpclient.wire.content  - << "[\n]"
2484 [main] DEBUG httpclient.wire.content  - << "0"
2484 [main] DEBUG httpclient.wire.content  - << "[\r]"
2484 [main] DEBUG httpclient.wire.content  - << "[\n]"
2484 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2484 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2484 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2484 [main] DEBUG httpclient.wire.content  - << "[\r]"
2485 [main] DEBUG httpclient.wire.content  - << "[\n]"
2485 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2485 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2485 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2485 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2485 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2485 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2485 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2485 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":"c622245a-4566-4dfd-9d48-c0e17713c584","message":"user successfully registered","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
3    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@43bb326c
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
26   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
29   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
52   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
53   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
58   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
70   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
70   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
71   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
73   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
73   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)
73   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Adding Host request header
74   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)
89   [main] DEBUG org.apache.commons.httpclient.HttpState  - enter HttpState.getCookies()
89   [main] DEBUG org.apache.commons.httpclient.cookie.CookieSpec  - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)
90   [main] DEBUG httpclient.wire.header  - >> "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "Host: localhost:9995[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.writeLine()
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
90   [main] DEBUG httpclient.wire.header  - >> "[\r][\n]"
90   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.flushRequestOutputStream()
90   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponse(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)
91   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.readLine()
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
94   [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2008 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2008 [main] DEBUG httpclient.wire.header  - << "HTTP/1.1 200 OK[\r][\n]"
2009 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)
2009 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "server: grizzly/1.9.8[\r][\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "Content-Type: application/json[\r][\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "Transfer-Encoding: chunked[\r][\n]"
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2010 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2010 [main] DEBUG httpclient.wire.header  - << "Date: Mon, 28 May 2012 09:39:20 GMT[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2011 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2011 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.readResponseBody(HttpConnection)
2011 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.getResponseInputStream()
2011 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.canResponseHaveBody(int)
2012 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(String)
2012 [main] DEBUG org.apache.commons.httpclient.HeaderElement  - enter HeaderElement.parseElements(char[])
2013 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable(int)
2014 [main] WARN  org.apache.commons.httpclient.HttpMethodBase  - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2014 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Buffering response body
2014 [main] DEBUG httpclient.wire.content  - << "2"
2014 [main] DEBUG httpclient.wire.content  - << "0"
2014 [main] DEBUG httpclient.wire.content  - << "0"
2014 [main] DEBUG httpclient.wire.content  - << "0"
2014 [main] DEBUG httpclient.wire.content  - << "[\r]"
2014 [main] DEBUG httpclient.wire.content  - << "[\n]"
2015 [main] DEBUG httpclient.wire.content  - << "{"object":[{"object":{"@class":"tv.notube.commons.model.activity.Song","mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:20.070+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"@class":"tv.notube.commons.model.activity.bbc.BBCProgramme","picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/"
2017 [main] DEBUG httpclient.wire.content  - << "sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:20.137+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"@class":"tv.notube.commons.model.activity.Tweet","text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:39:20.137+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","stat"
2017 [main] DEBUG httpclient.wire.content  - << "[\r]"
2017 [main] DEBUG httpclient.wire.content  - << "[\n]"
2017 [main] DEBUG httpclient.wire.content  - << "9"
2017 [main] DEBUG httpclient.wire.content  - << "[\r]"
2017 [main] DEBUG httpclient.wire.content  - << "[\n]"
2017 [main] DEBUG httpclient.wire.content  - << "us":"OK"}"
2017 [main] DEBUG httpclient.wire.content  - << "[\r]"
2017 [main] DEBUG httpclient.wire.content  - << "[\n]"
2017 [main] DEBUG httpclient.wire.content  - << "0"
2017 [main] DEBUG httpclient.wire.content  - << "[\r]"
2017 [main] DEBUG httpclient.wire.content  - << "[\n]"
2017 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HeaderParser.parseHeaders(InputStream, String)
2017 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readLine(InputStream, String)
2018 [main] DEBUG org.apache.commons.httpclient.HttpParser  - enter HttpParser.readRawLine()
2018 [main] DEBUG httpclient.wire.content  - << "[\r]"
2018 [main] DEBUG httpclient.wire.content  - << "[\n]"
2018 [main] DEBUG httpclient.wire.header  - << "[\r][\n]"
2018 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Resorting to protocol version default close connection policy
2018 [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - Should NOT close connection, using HTTP/1.1
2018 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.isResponseAvailable()
2018 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.releaseConnection()
2018 [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Releasing connection back to connection manager.
2018 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - result code: 200
2018 [main] INFO  tv.notube.platform.AbstractJerseyTestCase  - response body: {"object":[{"object":{"@class":"tv.notube.commons.model.activity.Song","mbid":"3278462378462","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:20.070+01:00","service":null,"mood":null},"verb":"LIKE"},{"object":{"@class":"tv.notube.commons.model.activity.bbc.BBCProgramme","picture":null,"genres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport#genre","label":"Sport","subGenres":[{"reference":"http://www.bbc.co.uk/programmes/genres/sport/alpineskiing#genre","label":"Alpine Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/americanfootball#genre","label":"American Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/archery#genre","label":"Archery","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/athletics#genre","label":"Athletics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/badminton#genre","label":"Badminton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/baseball#genre","label":"Baseball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/basketball#genre","label":"Basketball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/biathlon#genre","label":"Biathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bobsleigh#genre","label":"Bobsleigh","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/bowls#genre","label":"Bowls","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/boxing#genre","label":"Boxing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/canoeing#genre","label":"Canoeing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/commonwealthgames#genre","label":"Commonwealth Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cricket#genre","label":"Cricket","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/crosscountryskiing#genre","label":"Crosscountry Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/curling#genre","label":"Curling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/cycling#genre","label":"Cycling","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/darts#genre","label":"Darts","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/disabilitysport#genre","label":"Disability Sport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/diving#genre","label":"Diving","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/equestrian#genre","label":"Equestrian","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/fencing#genre","label":"Fencing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/figureskating#genre","label":"Figure Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/football#genre","label":"Football","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/formulaone#genre","label":"Formula One","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/freestyleskiing#genre","label":"Freestyle Skiing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gaelicgames#genre","label":"Gaelic Games","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/golf#genre","label":"Golf","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/gymnastics#genre","label":"Gymnastics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/handball#genre","label":"Handball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/hockey#genre","label":"Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/horseracing#genre","label":"Horseracing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/icehockey#genre","label":"Ice Hockey","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/judo#genre","label":"Judo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/luge#genre","label":"Luge","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/modernpentathlon#genre","label":"Modern Pentathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/motorsport#genre","label":"Motorsport","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/nordiccombined#genre","label":"Nordic Combined","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/olympics#genre","label":"Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rowing#genre","label":"Rowing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyleague#genre","label":"Rugby League","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/rugbyunion#genre","label":"Rugby Union","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/sailing#genre","label":"Sailing","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shinty#genre","label":"Shinty","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shooting#genre","label":"Shooting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/shorttrackskating#genre","label":"Short Track Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skeleton#genre","label":"Skeleton","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/skijumping#genre","label":"Ski Jumping","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snooker#genre","label":"Snooker","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/snowboarding#genre","label":"Snowboarding","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/softball#genre","label":"Softball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/speedskating#genre","label":"Speed Skating","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/swimming#genre","label":"Swimming","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tabletennis#genre","label":"Table Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/taekwondo#genre","label":"Taekwondo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/tennis#genre","label":"Tennis","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/triathlon#genre","label":"Triathlon","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/volleyball#genre","label":"Volleyball","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/waterpolo#genre","label":"Waterpolo","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/weightlifting#genre","label":"Weight Lifting","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/winterolympics#genre","label":"Winter Olympics","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wintersports#genre","label":"Winter Sports","subGenres":[]},{"reference":"http://www.bbc.co.uk/programmes/genres/sport/wrestling#genre","label":"Wrestling","subGenres":[]}]}],"actors":["Pippo Franco","Marisa Laurito"],"mediumSynopsis":"just a fake BBC programme","name":null,"description":null,"url":null},"context":{"date":"2012-05-28T10:39:20.137+01:00","service":null,"mood":null},"verb":"LISTEN"},{"object":{"@class":"tv.notube.commons.model.activity.Tweet","text":"just #fake tweet check it http://t.com/3423","hashTags":["fake"],"urls":["http://t.com/3423"],"name":"fake tweet name","description":null,"url":"http://twitter.com/2347223423/32"},"context":{"date":"2012-05-28T10:39:20.137+01:00","service":null,"mood":null},"verb":"LISTEN"}],"message":"user 'ExistingUser' activities found","status":"OK"}
0    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1
2    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.version = HTTP/1.1
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.cookie-policy = default
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.element-charset = US-ASCII
4    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.protocol.content-charset = ISO-8859-1
5    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@2bdafb4e
6    [main] DEBUG org.apache.commons.httpclient.params.DefaultHttpParams  - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]
25   [main] DEBUG org.apache.commons.httpclient.methods.GetMethod  - enter GetMethod(String)
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java version: 1.6.0_31
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java vendor: Apple Inc.
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Java class path: /Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/deploy.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/javaws.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/plugin.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/sa-jdi.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/apple_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/dnsns.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/localedata.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunjce_provider.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext/sunpkcs11.jar:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/test-classes:/Users/sourcesense/NoTube-Beancounter-2.0/platform/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/user-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/configuration/target/classes:/Users/sourcesense/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/sourcesense/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/sourcesense/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/Users/sourcesense/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/sourcesense/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/sourcesense/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/sourcesense/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/kvs/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/model/target/classes:/Users/sourcesense/.m2/repository/joda-time/joda-time/2.0/joda-time-2.0.jar:/Users/sourcesense/.m2/repository/org/mybatis/mybatis/3.0.6/mybatis-3.0.6.jar:/Users/sourcesense/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar:/Users/sourcesense/NoTube-Beancounter-2.0/commons/storage/alog/core/target/classes:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/sourcesense/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/sourcesense/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/Users/sourcesense/.m2/repository/org/scribe/scribe/1.2.3/scribe-1.2.3.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/storage/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-api/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/commons/model/target/classes:/Users/sourcesense/.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.4/jackson-jaxrs-1.8.4.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/runner/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/data-manager/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/profile-manager/profiling-line-container/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/analytics/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/applications/target/classes:/Users/sourcesense/NoTube-Beancounter-2.0/crawler/target/classes:/Users/sourcesense/.m2/repository/tv/notube/synch/client/1.0-SNAPSHOT/client-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/tv/notube/synch/model/1.0-SNAPSHOT/model-1.0-SNAPSHOT.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-model/2.4.0/sesame-model-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-collections/2.8.0/aduna-commons-collections-2.8.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-concurrent/2.7.0/aduna-commons-concurrent-2.7.0.jar:/Users/sourcesense/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-io/2.10.0/aduna-commons-io-2.10.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-i18n/1.4.0/aduna-commons-i18n-1.4.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-api/2.4.0/sesame-rio-api-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-lang/2.9.0/aduna-commons-lang-2.9.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-net/2.7.0/aduna-commons-net-2.7.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-text/2.7.0/aduna-commons-text-2.7.0.jar:/Users/sourcesense/.m2/repository/org/openrdf/sesame/sesame-rio-rdfxml/2.4.0/sesame-rio-rdfxml-2.4.0.jar:/Users/sourcesense/.m2/repository/info/aduna/commons/aduna-commons-xml/2.7.0/aduna-commons-xml-2.7.0.jar:/Users/sourcesense/.m2/repository/com/rosaloves/bitlyj/2.0.0/bitlyj-2.0.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-bundle/1.6/jersey-bundle-1.6.jar:/Users/sourcesense/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-json/1.6/jersey-json-1.6.jar:/Users/sourcesense/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/sourcesense/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/Users/sourcesense/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/sourcesense/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/sourcesense/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/sourcesense/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/sourcesense/.m2/repository/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-core/1.6/jersey-core-1.6.jar:/Users/sourcesense/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/sourcesense/.m2/repository/com/google/inject/guice/2.0/guice-2.0.jar:/Users/sourcesense/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.6/jersey-guice-1.6.jar:/Users/sourcesense/.m2/repository/com/google/inject/extensions/guice-servlet/2.0/guice-servlet-2.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-grizzly2/1.6/jersey-grizzly2-1.6.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http/2.0.1-b2/grizzly-http-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/Users/sourcesense/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.0.1-b2/grizzly-http-server-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.0.1-b2/grizzly-rcm-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.0.1-b2/grizzly-http-servlet-2.0.1-b2.jar:/Users/sourcesense/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.0.1-b2/grizzly-framework-2.0.1-b2-tests.jar:/Users/sourcesense/.m2/repository/org/glassfish/javax.servlet/3.0/javax.servlet-3.0.jar:/Users/sourcesense/.m2/repository/com/sun/jersey/jersey-server/1.6/jersey-server-1.6.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-servlet-webserver/1.9.8/grizzly-servlet-webserver-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http/1.9.8/grizzly-http-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-framework/1.9.8/grizzly-framework-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-utils/1.9.8/grizzly-utils-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-rcm/1.9.8/grizzly-rcm-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-portunif/1.9.8/grizzly-portunif-1.9.8.jar:/Users/sourcesense/.m2/repository/com/sun/grizzly/grizzly-http-servlet/1.9.8/grizzly-http-servlet-1.9.8.jar:/Users/sourcesense/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/sourcesense/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/sourcesense/.m2/repository/org/testng/testng/6.3/testng-6.3.jar:/Users/sourcesense/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/Users/sourcesense/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/Users/sourcesense/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/Users/sourcesense/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/Applications/IntelliJ IDEA 11 CE.app/plugins/testng/lib/testng-jdk15.jar:/Applications/IntelliJ IDEA 11 CE.app/lib/idea_rt.jar
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system name: Mac OS X
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system architecture: x86_64
27   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Operating system version: 10.6.8
49   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPKCS11-Darwin 1.6: SunPKCS11 accessing Mac OS X SmartCardServices
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SUN 1.6: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - Apple 1.0: Apple Provider (implements DES, Triple DES, AES, Blowfish, PBE, Diffie-Hellman, HMAC/MD5, HMAC/SHA1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunRsaSign 1.5: Sun RSA signature provider
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJSSE 1.6: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJCE 1.6: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunJGSS 1.0: Sun (Kerberos v5, SPNEGO)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunSASL 1.5: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - XMLDSig 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)
50   [main] DEBUG org.apache.commons.httpclient.HttpClient  - SunPCSC 1.6: Sun PC/SC provider
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HttpMethod)
54   [main] DEBUG org.apache.commons.httpclient.HttpClient  - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)
65   [main] DEBUG org.apache.commons.httpclient.HttpMethodDirector  - Attempt number 1 to process request
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.open()
65   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - Open connection to localhost:9995
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.execute(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)
67   [main] DEBUG org.apache.commons.httpclient.HttpMethodBase  - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)
68   [main] DEBUG httpclient.wire.header  - >> "GET /user/activities/ExistingUser?apikey=APIKEY HTTP/1.1[\r][\n]"
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.print(String)
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[])
68   [main] DEBUG org.apache.commons.httpclient.HttpConnection  - enter HttpConnection.write(byte[], int, int)
